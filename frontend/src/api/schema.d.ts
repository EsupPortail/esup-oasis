/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

/** OneOf type helpers */
type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };
type XOR<T, U> = T | U extends object ? (Without<T, U> & U) | (Without<U, T> & T) : T | U;
type OneOf<T extends any[]> = T extends [infer Only]
   ? Only
   : T extends [infer A, infer B, ...infer Rest]
     ? OneOf<[XOR<A, B>, ...Rest]>
     : never;

export interface paths {
   "/amenagements": {
      /**
       * Retrieves the collection of Amenagement resources.
       * @description Retrieves the collection of Amenagement resources.
       */
      get: operations["api_amenagements_get_collection"];
   };
   "/amenagements/utilisateurs": {
      /**
       * Retrieves the collection of Utilisateur resources.
       * @description Retrieves the collection of Utilisateur resources.
       */
      get: operations["api_amenagementsutilisateurs_get_collection"];
   };
   "/beneficiaires": {
      /**
       * Retrieves the collection of Utilisateur resources.
       * @description Retrieves the collection of Utilisateur resources.
       */
      get: operations["beneficiaires"];
   };
   "/beneficiaires/{uid}/pieces_jointes": {
      /**
       * Retrieves the collection of PieceJointeBeneficiaire resources.
       * @description Retrieves the collection of PieceJointeBeneficiaire resources.
       */
      get: operations["api_beneficiaires_uidpieces_jointes_get_collection"];
      /**
       * Creates a PieceJointeBeneficiaire resource.
       * @description Creates a PieceJointeBeneficiaire resource.
       */
      post: operations["api_beneficiaires_uidpieces_jointes_post"];
   };
   "/beneficiaires/{uid}/pieces_jointes/{id}": {
      /**
       * Retrieves a PieceJointeBeneficiaire resource.
       * @description Retrieves a PieceJointeBeneficiaire resource.
       */
      get: operations["api_beneficiaires_uidpieces_jointes_id_get"];
      /**
       * Removes the PieceJointeBeneficiaire resource.
       * @description Removes the PieceJointeBeneficiaire resource.
       */
      delete: operations["api_beneficiaires_uidpieces_jointes_id_delete"];
   };
   "/campus": {
      /**
       * Retrieves the collection of Campus resources.
       * @description Retrieves the collection of Campus resources.
       */
      get: operations["api_campus_get_collection"];
      /**
       * Creates a Campus resource.
       * @description Creates a Campus resource.
       */
      post: operations["api_campus_post"];
   };
   "/campus/{id}": {
      /**
       * Retrieves a Campus resource.
       * @description Retrieves a Campus resource.
       */
      get: operations["api_campus_id_get"];
      /**
       * Updates the Campus resource.
       * @description Updates the Campus resource.
       */
      patch: operations["api_campus_id_patch"];
   };
   "/categories_amenagements": {
      /**
       * Retrieves the collection of CategorieAmenagement resources.
       * @description Retrieves the collection of CategorieAmenagement resources.
       */
      get: operations["api_categories_amenagements_get_collection"];
      /**
       * Creates a CategorieAmenagement resource.
       * @description Creates a CategorieAmenagement resource.
       */
      post: operations["api_categories_amenagements_post"];
   };
   "/categories_amenagements/{id}": {
      /**
       * Retrieves a CategorieAmenagement resource.
       * @description Retrieves a CategorieAmenagement resource.
       */
      get: operations["api_categories_amenagements_id_get"];
      /**
       * Updates the CategorieAmenagement resource.
       * @description Updates the CategorieAmenagement resource.
       */
      patch: operations["api_categories_amenagements_id_patch"];
   };
   "/categories_tags": {
      /**
       * Retrieves the collection of CategorieTag resources.
       * @description Retrieves the collection of CategorieTag resources.
       */
      get: operations["api_categories_tags_get_collection"];
      /**
       * Creates a CategorieTag resource.
       * @description Creates a CategorieTag resource.
       */
      post: operations["api_categories_tags_post"];
   };
   "/categories_tags/{id}": {
      /**
       * Retrieves a CategorieTag resource.
       * @description Retrieves a CategorieTag resource.
       */
      get: operations["api_categories_tags_id_get"];
      /**
       * Updates the CategorieTag resource.
       * @description Updates the CategorieTag resource.
       */
      patch: operations["api_categories_tags_id_patch"];
   };
   "/categories_tags/{id}/tags": {
      /**
       * Retrieves the collection of Tag resources.
       * @description Retrieves the collection of Tag resources.
       */
      get: operations["api_categories_tags_idtags_get_collection"];
   };
   "/chartes": {
      /**
       * Retrieves the collection of Charte resources.
       * @description Retrieves the collection of Charte resources.
       */
      get: operations["api_chartes_get_collection"];
      /**
       * Creates a Charte resource.
       * @description Creates a Charte resource.
       */
      post: operations["api_chartes_post"];
   };
   "/chartes/{id}": {
      /**
       * Retrieves a Charte resource.
       * @description Retrieves a Charte resource.
       */
      get: operations["api_chartes_id_get"];
      /**
       * Removes the Charte resource.
       * @description Removes the Charte resource.
       */
      delete: operations["api_chartes_id_delete"];
      /**
       * Updates the Charte resource.
       * @description Updates the Charte resource.
       */
      patch: operations["api_chartes_id_patch"];
   };
   "/clubs_sportifs": {
      /**
       * Retrieves the collection of ClubSportif resources.
       * @description Retrieves the collection of ClubSportif resources.
       */
      get: operations["api_clubs_sportifs_get_collection"];
      /**
       * Creates a ClubSportif resource.
       * @description Creates a ClubSportif resource.
       */
      post: operations["api_clubs_sportifs_post"];
   };
   "/clubs_sportifs/{id}": {
      /**
       * Retrieves a ClubSportif resource.
       * @description Retrieves a ClubSportif resource.
       */
      get: operations["api_clubs_sportifs_id_get"];
      /**
       * Updates the ClubSportif resource.
       * @description Updates the ClubSportif resource.
       */
      patch: operations["api_clubs_sportifs_id_patch"];
   };
   "/commissions": {
      /**
       * Retrieves the collection of Commission resources.
       * @description Retrieves the collection of Commission resources.
       */
      get: operations["api_commissions_get_collection"];
      /**
       * Creates a Commission resource.
       * @description Creates a Commission resource.
       */
      post: operations["api_commissions_post"];
   };
   "/commissions/{commissionId}/membres": {
      /**
       * Retrieves the collection of MembreCommission resources.
       * @description Retrieves the collection of MembreCommission resources.
       */
      get: operations["api_commissions_commissionIdmembres_get_collection"];
   };
   "/commissions/{commissionId}/membres/{uid}": {
      /**
       * Retrieves a MembreCommission resource.
       * @description Retrieves a MembreCommission resource.
       */
      get: operations["api_commissions_commissionIdmembres_uid_get"];
      /**
       * Replaces the MembreCommission resource.
       * @description Replaces the MembreCommission resource.
       */
      put: operations["api_commissions_commissionIdmembres_uid_put"];
      /**
       * Removes the MembreCommission resource.
       * @description Removes the MembreCommission resource.
       */
      delete: operations["api_commissions_commissionIdmembres_uid_delete"];
   };
   "/commissions/{id}": {
      /**
       * Retrieves a Commission resource.
       * @description Retrieves a Commission resource.
       */
      get: operations["api_commissions_id_get"];
      /**
       * Updates the Commission resource.
       * @description Updates the Commission resource.
       */
      patch: operations["api_commissions_id_patch"];
   };
   "/competences": {
      /**
       * Retrieves the collection of Competence resources.
       * @description Retrieves the collection of Competence resources.
       */
      get: operations["api_competences_get_collection"];
      /**
       * Creates a Competence resource.
       * @description Creates a Competence resource.
       */
      post: operations["api_competences_post"];
   };
   "/competences/{id}": {
      /**
       * Retrieves a Competence resource.
       * @description Retrieves a Competence resource.
       */
      get: operations["api_competences_id_get"];
      /**
       * Updates the Competence resource.
       * @description Updates the Competence resource.
       */
      patch: operations["api_competences_id_patch"];
   };
   "/composantes": {
      /**
       * Retrieves the collection of Composante resources.
       * @description Retrieves the collection of Composante resources.
       */
      get: operations["api_composantes_get_collection"];
   };
   "/composantes/{id}": {
      /**
       * Retrieves a Composante resource.
       * @description Retrieves a Composante resource.
       */
      get: operations["api_composantes_id_get"];
      /**
       * Updates the Composante resource.
       * @description Updates the Composante resource.
       */
      patch: operations["api_composantes_id_patch"];
   };
   "/demandes": {
      /**
       * Retrieves the collection of Demande resources.
       * @description Retrieves the collection of Demande resources.
       */
      get: operations["api_demandes_get_collection"];
      /**
       * Creates a Demande resource.
       * @description Creates a Demande resource.
       */
      post: operations["api_demandes_post"];
   };
   "/demandes/{demandeId}/modifications": {
      /**
       * Retrieves the collection of ModificationEtatDemande resources.
       * @description Retrieves the collection of ModificationEtatDemande resources.
       */
      get: operations["api_demandes_demandeIdmodifications_get_collection"];
   };
   "/demandes/{demandeId}/modifications/{id}": {
      /**
       * Retrieves a ModificationEtatDemande resource.
       * @description Retrieves a ModificationEtatDemande resource.
       */
      get: operations["api_demandes_demandeIdmodifications_id_get"];
   };
   "/demandes/{demandeId}/questions/{questionId}/reponse": {
      /**
       * Retrieves a Reponse resource.
       * @description Retrieves a Reponse resource.
       */
      get: operations["api_demandes_demandeIdquestions_questionIdreponse_get"];
      /**
       * Replaces the Reponse resource.
       * @description Replaces the Reponse resource.
       */
      put: operations["api_demandes_demandeIdquestions_questionIdreponse_put"];
   };
   "/demandes/{id}": {
      /**
       * Retrieves a Demande resource.
       * @description Retrieves a Demande resource.
       */
      get: operations["api_demandes_id_get"];
      /**
       * Updates the Demande resource.
       * @description Updates the Demande resource.
       */
      patch: operations["api_demandes_id_patch"];
   };
   "/disciplines_artistiques": {
      /**
       * Retrieves the collection of DisciplineArtistique resources.
       * @description Retrieves the collection of DisciplineArtistique resources.
       */
      get: operations["api_disciplines_artistiques_get_collection"];
      /**
       * Creates a DisciplineArtistique resource.
       * @description Creates a DisciplineArtistique resource.
       */
      post: operations["api_disciplines_artistiques_post"];
   };
   "/disciplines_artistiques/{id}": {
      /**
       * Retrieves a DisciplineArtistique resource.
       * @description Retrieves a DisciplineArtistique resource.
       */
      get: operations["api_disciplines_artistiques_id_get"];
      /**
       * Updates the DisciplineArtistique resource.
       * @description Updates the DisciplineArtistique resource.
       */
      patch: operations["api_disciplines_artistiques_id_patch"];
   };
   "/disciplines_sportives": {
      /**
       * Retrieves the collection of DisciplineSportive resources.
       * @description Retrieves the collection of DisciplineSportive resources.
       */
      get: operations["api_disciplines_sportives_get_collection"];
      /**
       * Creates a DisciplineSportive resource.
       * @description Creates a DisciplineSportive resource.
       */
      post: operations["api_disciplines_sportives_post"];
   };
   "/disciplines_sportives/{id}": {
      /**
       * Retrieves a DisciplineSportive resource.
       * @description Retrieves a DisciplineSportive resource.
       */
      get: operations["api_disciplines_sportives_id_get"];
      /**
       * Updates the DisciplineSportive resource.
       * @description Updates the DisciplineSportive resource.
       */
      patch: operations["api_disciplines_sportives_id_patch"];
   };
   "/etablissements_enseignement_artistique": {
      /**
       * Retrieves the collection of EtablissementEnseignementArtistique resources.
       * @description Retrieves the collection of EtablissementEnseignementArtistique resources.
       */
      get: operations["api_etablissements_enseignement_artistique_get_collection"];
      /**
       * Creates a EtablissementEnseignementArtistique resource.
       * @description Creates a EtablissementEnseignementArtistique resource.
       */
      post: operations["api_etablissements_enseignement_artistique_post"];
   };
   "/etablissements_enseignement_artistique/{id}": {
      /**
       * Retrieves a EtablissementEnseignementArtistique resource.
       * @description Retrieves a EtablissementEnseignementArtistique resource.
       */
      get: operations["api_etablissements_enseignement_artistique_id_get"];
      /**
       * Updates the EtablissementEnseignementArtistique resource.
       * @description Updates the EtablissementEnseignementArtistique resource.
       */
      patch: operations["api_etablissements_enseignement_artistique_id_patch"];
   };
   "/etapes_demandes": {
      /**
       * Retrieves the collection of EtapeDemande resources.
       * @description Retrieves the collection of EtapeDemande resources.
       */
      get: operations["api_etapes_demandes_get_collection"];
   };
   "/etapes_demandes/{id}": {
      /**
       * Retrieves a EtapeDemande resource.
       * @description Retrieves a EtapeDemande resource.
       */
      get: operations["api_etapes_demandes_id_get"];
   };
   "/etats_demandes": {
      /**
       * Retrieves the collection of EtatDemande resources.
       * @description Retrieves the collection of EtatDemande resources.
       */
      get: operations["api_etats_demandes_get_collection"];
   };
   "/etats_demandes/{id}": {
      /**
       * Retrieves a EtatDemande resource.
       * @description Retrieves a EtatDemande resource.
       */
      get: operations["api_etats_demandes_id_get"];
   };
   "/evenements": {
      /**
       * Retrieves the collection of Evenement resources.
       * @description Retrieves the collection of Evenement resources.
       */
      get: operations["api_evenements_get_collection"];
      /**
       * Creates a Evenement resource.
       * @description Creates a Evenement resource.
       */
      post: operations["api_evenements_post"];
   };
   "/evenements/{id}": {
      /**
       * Retrieves a Evenement resource.
       * @description Retrieves a Evenement resource.
       */
      get: operations["api_evenements_id_get"];
      /**
       * Removes the Evenement resource.
       * @description Removes the Evenement resource.
       */
      delete: operations["api_evenements_id_delete"];
      /**
       * Updates the Evenement resource.
       * @description Updates the Evenement resource.
       */
      patch: operations["api_evenements_id_patch"];
   };
   "/formations": {
      /**
       * Retrieves the collection of Formation resources.
       * @description Retrieves the collection of Formation resources.
       */
      get: operations["api_formations_get_collection"];
   };
   "/formations/{id}": {
      /**
       * Retrieves a Formation resource.
       * @description Retrieves a Formation resource.
       */
      get: operations["api_formations_id_get"];
   };
   "/intervenants": {
      /**
       * Retrieves the collection of Utilisateur resources.
       * @description Retrieves the collection of Utilisateur resources.
       */
      get: operations["intervenants"];
   };
   "/intervenants/{uid}/services_faits": {
      /**
       * Retrieves the collection of ServicesFaits resources.
       * @description Retrieves the collection of ServicesFaits resources.
       */
      get: operations["api_intervenants_uidservices_faits_get_collection"];
   };
   "/intervenants/{uid}/services_faits/{id}": {
      /**
       * Retrieves a ServicesFaits resource.
       * @description Retrieves a ServicesFaits resource.
       */
      get: operations["api_intervenants_uidservices_faits_id_get"];
   };
   "/interventions_forfait": {
      /**
       * Retrieves the collection of InterventionForfait resources.
       * @description Retrieves the collection of InterventionForfait resources.
       */
      get: operations["api_interventions_forfait_get_collection"];
      /**
       * Creates a InterventionForfait resource.
       * @description Creates a InterventionForfait resource.
       */
      post: operations["api_interventions_forfait_post"];
   };
   "/interventions_forfait/{id}": {
      /**
       * Retrieves a InterventionForfait resource.
       * @description Retrieves a InterventionForfait resource.
       */
      get: operations["api_interventions_forfait_id_get"];
      /**
       * Removes the InterventionForfait resource.
       * @description Removes the InterventionForfait resource.
       */
      delete: operations["api_interventions_forfait_id_delete"];
      /**
       * Updates the InterventionForfait resource.
       * @description Updates the InterventionForfait resource.
       */
      patch: operations["api_interventions_forfait_id_patch"];
   };
   "/liste_sportifs_haut_niveau": {
      /**
       * Retrieves a ListeSportifsHautNiveau resource.
       * @description Retrieves a ListeSportifsHautNiveau resource.
       */
      get: operations["api_liste_sportifs_haut_niveau_get"];
   };
   "/parametres": {
      /**
       * Retrieves the collection of Parametre resources.
       * @description Retrieves the collection of Parametre resources.
       */
      get: operations["api_parametres_get_collection"];
   };
   "/parametres/{cle}": {
      /**
       * Retrieves a Parametre resource.
       * @description Retrieves a Parametre resource.
       */
      get: operations["api_parametres_cle_get"];
   };
   "/parametres/{cle}/valeurs": {
      /**
       * Creates a ValeurParametre resource.
       * @description Creates a ValeurParametre resource.
       */
      post: operations["api_parametres_clevaleurs_post"];
   };
   "/parametres/{cle}/valeurs/{id}": {
      /**
       * Retrieves a ValeurParametre resource.
       * @description Retrieves a ValeurParametre resource.
       */
      get: operations["api_parametres_clevaleurs_id_get"];
      /**
       * Updates the ValeurParametre resource.
       * @description Updates the ValeurParametre resource.
       */
      patch: operations["api_parametres_clevaleurs_id_patch"];
   };
   "/periodes": {
      /**
       * Retrieves the collection of PeriodeRH resources.
       * @description Retrieves the collection of PeriodeRH resources.
       */
      get: operations["api_periodes_get_collection"];
      /**
       * Creates a PeriodeRH resource.
       * @description Creates a PeriodeRH resource.
       */
      post: operations["api_periodes_post"];
   };
   "/periodes/{id}": {
      /**
       * Retrieves a PeriodeRH resource.
       * @description Retrieves a PeriodeRH resource.
       */
      get: operations["api_periodes_id_get"];
      /**
       * Updates the PeriodeRH resource.
       * @description Updates the PeriodeRH resource.
       */
      patch: operations["api_periodes_id_patch"];
   };
   "/periodes/{id}/services_faits": {
      /**
       * Retrieves a ServicesFaits resource.
       * @description Retrieves a ServicesFaits resource.
       */
      get: operations["api_periodes_idservices_faits_get"];
   };
   "/profils": {
      /**
       * Retrieves the collection of ProfilBeneficiaire resources.
       * @description Retrieves the collection of ProfilBeneficiaire resources.
       */
      get: operations["api_profils_get_collection"];
      /**
       * Creates a ProfilBeneficiaire resource.
       * @description Creates a ProfilBeneficiaire resource.
       */
      post: operations["api_profils_post"];
   };
   "/profils/{id}": {
      /**
       * Retrieves a ProfilBeneficiaire resource.
       * @description Retrieves a ProfilBeneficiaire resource.
       */
      get: operations["api_profils_id_get"];
      /**
       * Updates the ProfilBeneficiaire resource.
       * @description Updates the ProfilBeneficiaire resource.
       */
      patch: operations["api_profils_id_patch"];
   };
   "/questions/{id}": {
      /**
       * Retrieves a Question resource.
       * @description Retrieves a Question resource.
       */
      get: operations["api_questions_id_get"];
   };
   "/renforts": {
      /**
       * Retrieves the collection of Utilisateur resources.
       * @description Retrieves the collection of Utilisateur resources.
       */
      get: operations["renforts"];
   };
   "/roles/{roleId}/utilisateurs": {
      /**
       * Retrieves the collection of Utilisateur resources.
       * @description Retrieves the collection of Utilisateur resources.
       */
      get: operations["api_roles_roleIdutilisateurs_get_collection"];
   };
   "/services": {
      /**
       * Liste des services
       * @description Retourne la liste des services
       */
      get: operations["api_services_get_collection"];
      /**
       * Creates a Service resource.
       * @description Creates a Service resource.
       */
      post: operations["api_services_post"];
   };
   "/services/{id}": {
      /**
       * Détail d'un service
       * @description Retourne le détail du service demandé
       */
      get: operations["api_services_id_get"];
      /**
       * Updates the Service resource.
       * @description Updates the Service resource.
       */
      patch: operations["api_services_id_patch"];
   };
   "/sportifs_haut_niveau": {
      /**
       * Retrieves the collection of SportifHautNiveau resources.
       * @description Retrieves the collection of SportifHautNiveau resources.
       */
      get: operations["api_sportifs_haut_niveau_get_collection"];
      /**
       * Replaces the ListeSportifsHautNiveau resource.
       * @description Replaces the ListeSportifsHautNiveau resource.
       */
      put: operations["api_sportifs_haut_niveau_put"];
      /**
       * Creates a SportifHautNiveau resource.
       * @description Creates a SportifHautNiveau resource.
       */
      post: operations["api_sportifs_haut_niveau_post"];
   };
   "/sportifs_haut_niveau/{identifiantExterne}": {
      /**
       * Retrieves a SportifHautNiveau resource.
       * @description Retrieves a SportifHautNiveau resource.
       */
      get: operations["api_sportifs_haut_niveau_identifiantExterne_get"];
      /**
       * Removes the SportifHautNiveau resource.
       * @description Removes the SportifHautNiveau resource.
       */
      delete: operations["api_sportifs_haut_niveau_identifiantExterne_delete"];
      /**
       * Updates the SportifHautNiveau resource.
       * @description Updates the SportifHautNiveau resource.
       */
      patch: operations["api_sportifs_haut_niveau_identifiantExterne_patch"];
   };
   "/statistiques": {
      /**
       * Retrieves a TableauDeBord resource.
       * @description Retrieves a TableauDeBord resource.
       */
      get: operations["api_statistiques_get"];
   };
   "/suivis/activite": {
      /**
       * Retrieves the collection of BilanActivite resources.
       * @description Bilan activite
       */
      get: operations["api_suivisactivite_get_collection"];
      /**
       * Creates a BilanActivite resource.
       * @description Bilan activite
       */
      post: operations["api_suivisactivite_post"];
   };
   "/suivis/activite/{id}": {
      /**
       * Retrieves a BilanActivite resource.
       * @description Bilan activite
       */
      get: operations["api_suivisactivite_id_get"];
      /**
       * Removes the BilanActivite resource.
       * @description Bilan activite
       */
      delete: operations["api_suivisactivite_id_delete"];
   };
   "/suivis/beneficiaires": {
      /**
       * Retrieves the collection of ActiviteBeneficiaire resources.
       * @description Retrieves the collection of ActiviteBeneficiaire resources.
       */
      get: operations["api_suivisbeneficiaires_get_collection"];
   };
   "/suivis/financiers/debut/{debut}/fin/{fin}": {
      /**
       * Retrieves the collection of BilanFinancier resources.
       * @description Bilan financier
       */
      get: operations["api_suivisfinanciersdebut_debutfin_fin_get_collection"];
   };
   "/suivis/intervenants": {
      /**
       * Retrieves the collection of ActiviteIntervenant resources.
       * @description Retrieves the collection of ActiviteIntervenant resources.
       */
      get: operations["api_suivisintervenants_get_collection"];
   };
   "/tags": {
      /**
       * Retrieves the collection of Tag resources.
       * @description Retrieves the collection of Tag resources.
       */
      get: operations["api_tags_get_collection"];
      /**
       * Creates a Tag resource.
       * @description Creates a Tag resource.
       */
      post: operations["api_tags_post"];
   };
   "/tags/{id}": {
      /**
       * Retrieves a Tag resource.
       * @description Retrieves a Tag resource.
       */
      get: operations["api_tags_id_get"];
      /**
       * Updates the Tag resource.
       * @description Updates the Tag resource.
       */
      patch: operations["api_tags_id_patch"];
   };
   "/telechargements": {
      /**
       * Creates a Telechargement resource.
       * @description Creates a Telechargement resource.
       */
      post: operations["api_telechargements_post"];
   };
   "/telechargements/{id}": {
      /**
       * Retrieves a Telechargement resource.
       * @description Retrieves a Telechargement resource.
       */
      get: operations["api_telechargements_id_get"];
   };
   "/types_amenagements": {
      /**
       * Retrieves the collection of TypeAmenagement resources.
       * @description Retrieves the collection of TypeAmenagement resources.
       */
      get: operations["api_types_amenagements_get_collection"];
      /**
       * Creates a TypeAmenagement resource.
       * @description Creates a TypeAmenagement resource.
       */
      post: operations["api_types_amenagements_post"];
   };
   "/types_amenagements/{id}": {
      /**
       * Retrieves a TypeAmenagement resource.
       * @description Retrieves a TypeAmenagement resource.
       */
      get: operations["api_types_amenagements_id_get"];
      /**
       * Updates the TypeAmenagement resource.
       * @description Updates the TypeAmenagement resource.
       */
      patch: operations["api_types_amenagements_id_patch"];
   };
   "/types_demandes": {
      /**
       * Retrieves the collection of TypeDemande resources.
       * @description Retrieves the collection of TypeDemande resources.
       */
      get: operations["api_types_demandes_get_collection"];
      /**
       * Creates a TypeDemande resource.
       * @description Creates a TypeDemande resource.
       */
      post: operations["api_types_demandes_post"];
   };
   "/types_demandes/{id}": {
      /**
       * Retrieves a TypeDemande resource.
       * @description Retrieves a TypeDemande resource.
       */
      get: operations["api_types_demandes_id_get"];
      /**
       * Updates the TypeDemande resource.
       * @description Updates the TypeDemande resource.
       */
      patch: operations["api_types_demandes_id_patch"];
   };
   "/types_demandes/{typeId}/campagnes": {
      /**
       * Retrieves the collection of CampagneDemande resources.
       * @description Retrieves the collection of CampagneDemande resources.
       */
      get: operations["api_types_demandes_typeIdcampagnes_get_collection"];
      /**
       * Creates a CampagneDemande resource.
       * @description Creates a CampagneDemande resource.
       */
      post: operations["api_types_demandes_typeIdcampagnes_post"];
   };
   "/types_demandes/{typeId}/campagnes/{id}": {
      /**
       * Retrieves a CampagneDemande resource.
       * @description Retrieves a CampagneDemande resource.
       */
      get: operations["api_types_demandes_typeIdcampagnes_id_get"];
      /**
       * Updates the CampagneDemande resource.
       * @description Updates the CampagneDemande resource.
       */
      patch: operations["api_types_demandes_typeIdcampagnes_id_patch"];
   };
   "/types_engagements": {
      /**
       * Liste des types d'engagements
       * @description Retourne la liste des types d'équipements
       */
      get: operations["api_types_engagements_get_collection"];
      /**
       * Creates a TypeEngagement resource.
       * @description Creates a TypeEngagement resource.
       */
      post: operations["api_types_engagements_post"];
   };
   "/types_engagements/{id}": {
      /**
       * Détail d'un types d'engagements
       * @description Retourne le détail du type d'équipement demandé
       */
      get: operations["api_types_engagements_id_get"];
      /**
       * Updates the TypeEngagement resource.
       * @description Updates the TypeEngagement resource.
       */
      patch: operations["api_types_engagements_id_patch"];
   };
   "/types_equipements": {
      /**
       * Liste des types d'équipements
       * @description Retourne la liste des types d'équipements
       */
      get: operations["api_types_equipements_get_collection"];
      /**
       * Creates a TypeEquipement resource.
       * @description Creates a TypeEquipement resource.
       */
      post: operations["api_types_equipements_post"];
   };
   "/types_equipements/{id}": {
      /**
       * Détail d'un types d'équipements
       * @description Retourne le détail du type d'équipement demandé
       */
      get: operations["api_types_equipements_id_get"];
      /**
       * Updates the TypeEquipement resource.
       * @description Updates the TypeEquipement resource.
       */
      patch: operations["api_types_equipements_id_patch"];
   };
   "/types_evenements": {
      /**
       * Liste des types d'événements
       * @description Retourne la liste des types d'événements
       */
      get: operations["api_types_evenements_get_collection"];
      /**
       * Creates a TypeEvenement resource.
       * @description Creates a TypeEvenement resource.
       */
      post: operations["api_types_evenements_post"];
   };
   "/types_evenements/{id}": {
      /**
       * Détail d'un types d'événements
       * @description Retourne le détail du type d'événements demandé
       */
      get: operations["api_types_evenements_id_get"];
      /**
       * Updates the TypeEvenement resource.
       * @description Updates the TypeEvenement resource.
       */
      patch: operations["api_types_evenements_id_patch"];
   };
   "/types_evenements/{typeId}/taux": {
      /**
       * Retrieves the collection of TauxHoraire resources.
       * @description Retrieves the collection of TauxHoraire resources.
       */
      get: operations["api_types_evenements_typeIdtaux_get_collection"];
      /**
       * Creates a TauxHoraire resource.
       * @description Creates a TauxHoraire resource.
       */
      post: operations["api_types_evenements_typeIdtaux_post"];
   };
   "/types_evenements/{typeId}/taux/{id}": {
      /**
       * Retrieves a TauxHoraire resource.
       * @description Retrieves a TauxHoraire resource.
       */
      get: operations["api_types_evenements_typeIdtaux_id_get"];
      /**
       * Removes the TauxHoraire resource.
       * @description Removes the TauxHoraire resource.
       */
      delete: operations["api_types_evenements_typeIdtaux_id_delete"];
      /**
       * Updates the TauxHoraire resource.
       * @description Updates the TauxHoraire resource.
       */
      patch: operations["api_types_evenements_typeIdtaux_id_patch"];
   };
   "/types_suivi_amenagements": {
      /**
       * Retrieves the collection of TypeSuiviAmenagement resources.
       * @description Retrieves the collection of TypeSuiviAmenagement resources.
       */
      get: operations["api_types_suivi_amenagements_get_collection"];
      /**
       * Creates a TypeSuiviAmenagement resource.
       * @description Creates a TypeSuiviAmenagement resource.
       */
      post: operations["api_types_suivi_amenagements_post"];
   };
   "/types_suivi_amenagements/{id}": {
      /**
       * Retrieves a TypeSuiviAmenagement resource.
       * @description Retrieves a TypeSuiviAmenagement resource.
       */
      get: operations["api_types_suivi_amenagements_id_get"];
      /**
       * Updates the TypeSuiviAmenagement resource.
       * @description Updates the TypeSuiviAmenagement resource.
       */
      patch: operations["api_types_suivi_amenagements_id_patch"];
   };
   "/typologies": {
      /**
       * Retrieves the collection of TypologieHandicap resources.
       * @description Retrieves the collection of TypologieHandicap resources.
       */
      get: operations["api_typologies_get_collection"];
      /**
       * Creates a TypologieHandicap resource.
       * @description Creates a TypologieHandicap resource.
       */
      post: operations["api_typologies_post"];
   };
   "/typologies/{id}": {
      /**
       * Retrieves a TypologieHandicap resource.
       * @description Retrieves a TypologieHandicap resource.
       */
      get: operations["api_typologies_id_get"];
      /**
       * Updates the TypologieHandicap resource.
       * @description Updates the TypologieHandicap resource.
       */
      patch: operations["api_typologies_id_patch"];
   };
   "/utilisateurs": {
      /**
       * Retrieves the collection of Utilisateur resources.
       * @description Retrieves the collection of Utilisateur resources.
       */
      get: operations["utilisateurs"];
   };
   "/utilisateurs/{uid}": {
      /**
       * Retrieves a Utilisateur resource.
       * @description Retrieves a Utilisateur resource.
       */
      get: operations["api_utilisateurs_uid_get"];
      /**
       * Updates the Utilisateur resource.
       * @description Updates the Utilisateur resource.
       */
      patch: operations["api_utilisateurs_uid_patch"];
   };
   "/utilisateurs/{uid}/amenagements": {
      /**
       * Retrieves the collection of Amenagement resources.
       * @description Retrieves the collection of Amenagement resources.
       */
      get: operations["api_utilisateurs_uidamenagements_get_collection"];
      /**
       * Creates a Amenagement resource.
       * @description Creates a Amenagement resource.
       */
      post: operations["api_utilisateurs_uidamenagements_post"];
   };
   "/utilisateurs/{uid}/amenagements/{id}": {
      /**
       * Retrieves a Amenagement resource.
       * @description Retrieves a Amenagement resource.
       */
      get: operations["api_utilisateurs_uidamenagements_id_get"];
      /**
       * Removes the Amenagement resource.
       * @description Removes the Amenagement resource.
       */
      delete: operations["api_utilisateurs_uidamenagements_id_delete"];
      /**
       * Updates the Amenagement resource.
       * @description Updates the Amenagement resource.
       */
      patch: operations["api_utilisateurs_uidamenagements_id_patch"];
   };
   "/utilisateurs/{uid}/avis_ese": {
      /**
       * Retrieves the collection of AvisEse resources.
       * @description Retrieves the collection of AvisEse resources.
       */
      get: operations["api_utilisateurs_uidavis_ese_get_collection"];
      /**
       * Creates a AvisEse resource.
       * @description Creates a AvisEse resource.
       */
      post: operations["api_utilisateurs_uidavis_ese_post"];
   };
   "/utilisateurs/{uid}/avis_ese/{id}": {
      /**
       * Retrieves a AvisEse resource.
       * @description Retrieves a AvisEse resource.
       */
      get: operations["api_utilisateurs_uidavis_ese_id_get"];
      /**
       * Removes the AvisEse resource.
       * @description Removes the AvisEse resource.
       */
      delete: operations["api_utilisateurs_uidavis_ese_id_delete"];
      /**
       * Updates the AvisEse resource.
       * @description Updates the AvisEse resource.
       */
      patch: operations["api_utilisateurs_uidavis_ese_id_patch"];
   };
   "/utilisateurs/{uid}/chartes": {
      /**
       * Retrieves the collection of CharteUtilisateur resources.
       * @description Retrieves the collection of CharteUtilisateur resources.
       */
      get: operations["api_utilisateurs_uidchartes_get_collection"];
   };
   "/utilisateurs/{uid}/chartes/{id}": {
      /**
       * Retrieves a CharteUtilisateur resource.
       * @description Retrieves a CharteUtilisateur resource.
       */
      get: operations["api_utilisateurs_uidchartes_id_get"];
      /**
       * Updates the CharteUtilisateur resource.
       * @description Updates the CharteUtilisateur resource.
       */
      patch: operations["api_utilisateurs_uidchartes_id_patch"];
   };
   "/utilisateurs/{uid}/decisions/{annee}": {
      /**
       * Retrieves a DecisionAmenagementExamens resource.
       * @description Retrieves a DecisionAmenagementExamens resource.
       */
      get: operations["api_utilisateurs_uiddecisions_annee_get"];
      /**
       * Updates the DecisionAmenagementExamens resource.
       * @description Updates the DecisionAmenagementExamens resource.
       */
      patch: operations["api_utilisateurs_uiddecisions_annee_patch"];
   };
   "/utilisateurs/{uid}/demandes": {
      /**
       * Retrieves the collection of Demande resources.
       * @description Retrieves the collection of Demande resources.
       */
      get: operations["api_utilisateurs_uiddemandes_get_collection"];
   };
   "/utilisateurs/{uid}/entretiens": {
      /**
       * Retrieves the collection of Entretien resources.
       * @description Retrieves the collection of Entretien resources.
       */
      get: operations["api_utilisateurs_uidentretiens_get_collection"];
      /**
       * Creates a Entretien resource.
       * @description Creates a Entretien resource.
       */
      post: operations["api_utilisateurs_uidentretiens_post"];
   };
   "/utilisateurs/{uid}/entretiens/{id}": {
      /**
       * Retrieves a Entretien resource.
       * @description Retrieves a Entretien resource.
       */
      get: operations["api_utilisateurs_uidentretiens_id_get"];
      /**
       * Removes the Entretien resource.
       * @description Removes the Entretien resource.
       */
      delete: operations["api_utilisateurs_uidentretiens_id_delete"];
      /**
       * Updates the Entretien resource.
       * @description Updates the Entretien resource.
       */
      patch: operations["api_utilisateurs_uidentretiens_id_patch"];
   };
   "/utilisateurs/{uid}/parametres_ui": {
      /**
       * Retrieves the collection of ParametreUI resources.
       * @description Retrieves the collection of ParametreUI resources.
       */
      get: operations["api_utilisateurs_uidparametres_ui_get_collection"];
   };
   "/utilisateurs/{uid}/parametres_ui/{cle}": {
      /**
       * Retrieves a ParametreUI resource.
       * @description Retrieves a ParametreUI resource.
       */
      get: operations["api_utilisateurs_uidparametres_ui_cle_get"];
      /**
       * Replaces the ParametreUI resource.
       * @description Replaces the ParametreUI resource.
       */
      put: operations["api_utilisateurs_uidparametres_ui_cle_put"];
      /**
       * Removes the ParametreUI resource.
       * @description Removes the ParametreUI resource.
       */
      delete: operations["api_utilisateurs_uidparametres_ui_cle_delete"];
   };
   "/utilisateurs/{uid}/photo": {
      /**
       * Retrieves a Photo resource.
       * @description Retrieves a Photo resource.
       */
      get: operations["api_utilisateurs_uidphoto_get"];
   };
   "/utilisateurs/{uid}/profils": {
      /**
       * Creates a BeneficiaireProfil resource.
       * @description Creates a BeneficiaireProfil resource.
       */
      post: operations["api_utilisateurs_uidprofils_post"];
   };
   "/utilisateurs/{uid}/profils/{id}": {
      /**
       * Retrieves a BeneficiaireProfil resource.
       * @description Retrieves a BeneficiaireProfil resource.
       */
      get: operations["api_utilisateurs_uidprofils_id_get"];
      /**
       * Removes the BeneficiaireProfil resource.
       * @description Removes the BeneficiaireProfil resource.
       */
      delete: operations["api_utilisateurs_uidprofils_id_delete"];
      /**
       * Updates the BeneficiaireProfil resource.
       * @description Updates the BeneficiaireProfil resource.
       */
      patch: operations["api_utilisateurs_uidprofils_id_patch"];
   };
   "/utilisateurs/{uid}/tags": {
      /**
       * Retrieves the collection of TagUtilisateur resources.
       * @description Retrieves the collection of TagUtilisateur resources.
       */
      get: operations["api_utilisateurs_uidtags_get_collection"];
      /**
       * Creates a TagUtilisateur resource.
       * @description Creates a TagUtilisateur resource.
       */
      post: operations["api_utilisateurs_uidtags_post"];
   };
   "/utilisateurs/{uid}/tags/{id}": {
      /**
       * Retrieves a TagUtilisateur resource.
       * @description Retrieves a TagUtilisateur resource.
       */
      get: operations["api_utilisateurs_uidtags_id_get"];
      /**
       * Removes the TagUtilisateur resource.
       * @description Removes the TagUtilisateur resource.
       */
      delete: operations["api_utilisateurs_uidtags_id_delete"];
   };
}

export type webhooks = Record<string, never>;

export interface components {
   schemas: {
      "ActiviteBeneficiaire-ActiviteBeneficiaire.out": {
         nbEvenements?: number;
         nbHeures?: string;
         utilisateur?: components["schemas"]["Utilisateur-ActiviteBeneficiaire.out"];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type?: string;
         tauxHoraire?: components["schemas"]["TauxHoraire-ActiviteBeneficiaire.out"] | null;
      };
      "ActiviteBeneficiaire.jsonld-ActiviteBeneficiaire.out": {
         "@id"?: string;
         "@type"?: string;
         nbEvenements?: number;
         nbHeures?: string;
         utilisateur?: components["schemas"]["Utilisateur.jsonld-ActiviteBeneficiaire.out"];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type?: string;
         tauxHoraire?: components["schemas"]["TauxHoraire.jsonld-ActiviteBeneficiaire.out"] | null;
      };
      ActiviteBilanFinancier: {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         periode?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeEvenement?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tauxHoraire?: string | null;
         nbHeures?: string;
         coeffCharges?: string;
         montantBrut?: string;
         montantBrutCharge?: string;
      };
      "ActiviteBilanFinancier.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         periode?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeEvenement?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tauxHoraire?: string | null;
         nbHeures?: string;
         coeffCharges?: string;
         montantBrut?: string;
         montantBrutCharge?: string;
      };
      "ActiviteIntervenant-ActiviteIntervenant.out": {
         nbEvenements?: number;
         nbHeures?: string;
         utilisateur?: components["schemas"]["Utilisateur-ActiviteIntervenant.out"];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type?: string;
         tauxHoraire?: components["schemas"]["TauxHoraire-ActiviteIntervenant.out"] | null;
      };
      "ActiviteIntervenant.jsonld-ActiviteIntervenant.out": {
         "@id"?: string;
         "@type"?: string;
         nbEvenements?: number;
         nbHeures?: string;
         utilisateur?: components["schemas"]["Utilisateur.jsonld-ActiviteIntervenant.out"];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type?: string;
         tauxHoraire?: components["schemas"]["TauxHoraire.jsonld-ActiviteIntervenant.out"] | null;
      };
      "Amenagement-amenagement.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeAmenagement: string;
         semestre1?: boolean;
         semestre2?: boolean;
         /** Format: date-time */
         debut?: string | null;
         /** Format: date-time */
         fin?: string | null;
         commentaire?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         suivi?: string | null;
      };
      "Amenagement-amenagement.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         beneficiaire?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeAmenagement: string;
         semestre1?: boolean;
         semestre2?: boolean;
         /** Format: date-time */
         debut?: string | null;
         /** Format: date-time */
         fin?: string | null;
         commentaire?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         suivi?: string | null;
      };
      "Amenagement-amenagements_utilisateurs.out": {
         id?: number | null;
         typeAmenagement: components["schemas"]["TypeAmenagement-amenagements_utilisateurs.out"];
         commentaire?: string | null;
      };
      "Amenagement.jsonld-amenagement.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeAmenagement: string;
         semestre1?: boolean;
         semestre2?: boolean;
         /** Format: date-time */
         debut?: string | null;
         /** Format: date-time */
         fin?: string | null;
         commentaire?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         suivi?: string | null;
      };
      "Amenagement.jsonld-amenagement.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         beneficiaire?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeAmenagement: string;
         semestre1?: boolean;
         semestre2?: boolean;
         /** Format: date-time */
         debut?: string | null;
         /** Format: date-time */
         fin?: string | null;
         commentaire?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         suivi?: string | null;
      };
      "Amenagement.jsonld-amenagements_utilisateurs.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         typeAmenagement: components["schemas"]["TypeAmenagement.jsonld-amenagements_utilisateurs.out"];
         commentaire?: string | null;
      };
      "AvisEse-avis_ese.in": {
         libelle?: string | null;
         commentaire?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
      };
      "AvisEse-avis_ese.out": {
         id?: number | null;
         libelle?: string | null;
         commentaire?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
      };
      "AvisEse.jsonld-avis_ese.in": {
         libelle?: string | null;
         commentaire?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
      };
      "AvisEse.jsonld-avis_ese.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string | null;
         commentaire?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
      };
      "BeneficiaireProfil-beneficiaires_profils.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profil?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         gestionnaire: string;
         typologies?: string[];
         /**
          * @default true
          * @example true
          */
         avecAccompagnement?: boolean;
      };
      "BeneficiaireProfil-beneficiaires_profils.out": {
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profil?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         gestionnaire?: string;
         typologies?: string[];
         /**
          * @default true
          * @example true
          */
         avecAccompagnement?: boolean;
      };
      "BeneficiaireProfil.jsonld-beneficiaires_profils.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profil?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         gestionnaire: string;
         typologies?: string[];
         /**
          * @default true
          * @example true
          */
         avecAccompagnement?: boolean;
      };
      "BeneficiaireProfil.jsonld-beneficiaires_profils.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profil?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         gestionnaire?: string;
         typologies?: string[];
         /**
          * @default true
          * @example true
          */
         avecAccompagnement?: boolean;
      };
      "BilanActivite-bilan-activite.in": {
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         gestionnaires?: string[];
         profils?: string[];
         composantes?: string[];
         formations?: string[];
      };
      "BilanActivite-bilan-activite.out": {
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demandeur?: string;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         /** Format: date-time */
         dateDemande?: string;
         /** Format: date-time */
         dateGeneration?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         gestionnaires?: string[];
         profils?: string[];
         composantes?: string[];
         formations?: string[];
      };
      "BilanActivite.jsonld-bilan-activite.in": {
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         gestionnaires?: string[];
         profils?: string[];
         composantes?: string[];
         formations?: string[];
      };
      "BilanActivite.jsonld-bilan-activite.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demandeur?: string;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         /** Format: date-time */
         dateDemande?: string;
         /** Format: date-time */
         dateGeneration?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         gestionnaires?: string[];
         profils?: string[];
         composantes?: string[];
         formations?: string[];
      };
      BilanFinancier: {
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
         intervenants?: components["schemas"]["IntervenantBilanFinancier"][];
         periodes?: string[];
         id?: string;
      };
      "BilanFinancier.jsonld": {
         "@id"?: string;
         "@type"?: string;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
         intervenants?: components["schemas"]["IntervenantBilanFinancier.jsonld"][];
         periodes?: string[];
         id?: string;
      };
      "CampagneDemande-campagne.in": {
         libelle?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
         /** Format: date-time */
         dateCommission?: string | null;
         /** Format: date-time */
         dateArchivage?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         commission?: string | null;
         anneeCible?: number | null;
      };
      "CampagneDemande-campagne.out": {
         id?: number | null;
         libelle?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
         /** Format: date-time */
         dateCommission?: string | null;
         /** Format: date-time */
         dateArchivage?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         commission?: string | null;
         anneeCible?: number | null;
      };
      "CampagneDemande.jsonld-campagne.in": {
         libelle?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
         /** Format: date-time */
         dateCommission?: string | null;
         /** Format: date-time */
         dateArchivage?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         commission?: string | null;
         anneeCible?: number | null;
      };
      "CampagneDemande.jsonld-campagne.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string | null;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
         /** Format: date-time */
         dateCommission?: string | null;
         /** Format: date-time */
         dateArchivage?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         commission?: string | null;
         anneeCible?: number | null;
      };
      "Campus-campus.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Campus-campus.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Campus.jsonld-campus.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Campus.jsonld-campus.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      CategorieAmenagement: {
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "CategorieAmenagement-categorie_amenagement.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "CategorieAmenagement.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "CategorieAmenagement.jsonld-categorie_amenagement.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "CategorieTag-categorie_tag.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "CategorieTag-categorie_tag.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "CategorieTag.jsonld-categorie_tag.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "CategorieTag.jsonld-categorie_tag.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      Charte: {
         libelle?: string;
         contenu?: string;
         profilsAssocies?: string[];
      };
      "Charte.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         libelle?: string;
         contenu?: string;
         profilsAssocies?: string[];
      };
      CharteUtilisateur: {
         libelle?: string;
         contenu?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demande?: string;
         /** Format: date-time */
         dateValidation?: string | null;
      };
      "CharteUtilisateur-charte_utilisateur.in": {
         /** Format: date-time */
         dateValidation?: string | null;
      };
      "CharteUtilisateur.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         libelle?: string;
         contenu?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demande?: string;
         /** Format: date-time */
         dateValidation?: string | null;
      };
      "ClubSportif-club_sportif.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         centreFormation?: boolean;
         professionnel?: boolean;
      };
      "ClubSportif-club_sportif.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         centreFormation?: boolean;
         professionnel?: boolean;
      };
      "ClubSportif.jsonld-club_sportif.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         centreFormation?: boolean;
         professionnel?: boolean;
      };
      "ClubSportif.jsonld-club_sportif.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         centreFormation?: boolean;
         professionnel?: boolean;
      };
      "Commission-commission.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Commission-commission.out": {
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Commission.jsonld-commission.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Commission.jsonld-commission.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Competence-competence.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Competence-competence.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Competence.jsonld-competence.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Competence.jsonld-competence.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Composante-amenagements_utilisateurs.out": {
         libelle?: string;
      };
      "Composante-composante.in": {
         referents?: string[];
      };
      "Composante-composante.out": {
         id?: number;
         libelle?: string;
         referents?: string[];
      };
      "Composante.jsonld-amenagements_utilisateurs.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         libelle?: string;
      };
      "Composante.jsonld-composante.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number;
         libelle?: string;
         referents?: string[];
      };
      "DecisionAmenagementExamens-decision.in": {
         etat?: string;
      };
      "DecisionAmenagementExamens-decision.out": {
         etat?: string;
         urlContenu?: string | null;
      };
      "DecisionAmenagementExamens-utilisateur.out": {
         etat?: string;
      };
      "DecisionAmenagementExamens.jsonld-decision.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         etat?: string;
         urlContenu?: string | null;
      };
      "DecisionAmenagementExamens.jsonld-utilisateur.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         etat?: string;
      };
      "Demande-demande.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demandeur: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeDemande: string;
      };
      "Demande-demande.modif": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         etat?: string;
         commentaireChangementEtat?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profilAttribue?: string | null;
         commentaire?: string | null;
      };
      "Demande-demande.out": {
         id?: number | null;
         demandeur: components["schemas"]["Utilisateur-demande.out"] | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagne?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeDemande: string;
         idCommission?: number | null;
         /** Format: date-time */
         dateDepot?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         etat?: string;
         etapes?: components["schemas"]["EtapeDemandeEtudiant-demande.out"][];
         complete?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profilAttribue?: string | null;
         commentaire?: string | null;
      };
      "Demande.jsonld-demande.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demandeur: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeDemande: string;
      };
      "Demande.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         demandeur: components["schemas"]["Utilisateur.jsonld-demande.out"] | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagne?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         typeDemande: string;
         idCommission?: number | null;
         /** Format: date-time */
         dateDepot?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         etat?: string;
         etapes?: components["schemas"]["EtapeDemandeEtudiant.jsonld-demande.out"][];
         complete?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profilAttribue?: string | null;
         commentaire?: string | null;
      };
      "DisciplineArtistique-disciplines_artistiques.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "DisciplineArtistique-disciplines_artistiques.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "DisciplineArtistique.jsonld-disciplines_artistiques.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "DisciplineArtistique.jsonld-disciplines_artistiques.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "DisciplineSportive-discipline_sportive.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "DisciplineSportive-discipline_sportive.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "DisciplineSportive.jsonld-discipline_sportive.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "DisciplineSportive.jsonld-discipline_sportive.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Entretien-entretien.in": {
         commentaire?: string | null;
         /** Format: date-time */
         date?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
      };
      "Entretien-entretien.out": {
         id?: number | null;
         commentaire?: string | null;
         /** Format: date-time */
         date?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         gestionnaire?: string;
      };
      "Entretien.jsonld-entretien.in": {
         commentaire?: string | null;
         /** Format: date-time */
         date?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
      };
      "Entretien.jsonld-entretien.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         commentaire?: string | null;
         /** Format: date-time */
         date?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         gestionnaire?: string;
      };
      "EtablissementEnseignementArtistique-etablissements_enseignement_artistique.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "EtablissementEnseignementArtistique-etablissements_enseignement_artistique.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "EtablissementEnseignementArtistique.jsonld-etablissements_enseignement_artistique.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "EtablissementEnseignementArtistique.jsonld-etablissements_enseignement_artistique.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "EtapeDemande-etape_demande.out": {
         id?: number | null;
         libelle?: string;
         ordre?: number;
         questions?: string[];
      };
      "EtapeDemande-type_demande.out": {
         id?: number | null;
         libelle?: string;
         ordre?: number;
         questions?: string[];
      };
      "EtapeDemande.jsonld-etape_demande.out": {
         "@id"?: string;
         "@type"?: string;
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         id?: number | null;
         libelle?: string;
         ordre?: number;
         questions?: string[];
      };
      "EtapeDemande.jsonld-type_demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         ordre?: number;
         questions?: string[];
      };
      "EtapeDemandeEtudiant-demande.out": {
         id?: number;
         libelle?: string;
         ordre?: number;
         questions?: components["schemas"]["QuestionDemande-demande.out"][];
         etape?: string;
      };
      "EtapeDemandeEtudiant.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number;
         libelle?: string;
         ordre?: number;
         questions?: components["schemas"]["QuestionDemande.jsonld-demande.out"][];
         etape?: string;
      };
      EtatDemande: {
         id?: number;
         libelle?: string;
      };
      "EtatDemande.jsonld": {
         "@id"?: string;
         "@type"?: string;
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         id?: number;
         libelle?: string;
      };
      "Evenement-evenement.in": {
         libelle?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string | null;
         suppleants?: string[];
         enseignants?: string[];
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         tempsPreparation?: number;
         tempsSupplementaire?: number;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus: string;
         salle?: string | null;
         equipements?: string[];
         /** Format: date-time */
         dateAnnulation?: string | null;
         valide?: boolean | null;
      };
      "Evenement-evenement.out": {
         id?: number | null;
         libelle?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string | null;
         suppleants?: string[];
         enseignants?: string[];
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         tempsPreparation?: number;
         tempsSupplementaire?: number;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus: string;
         salle?: string | null;
         equipements?: string[];
         /** Format: date-time */
         dateAnnulation?: string | null;
         /** Format: date-time */
         dateEnvoiRH?: string | null;
         /** Format: date-time */
         dateCreation?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurCreation?: string;
         /** Format: date-time */
         dateModification?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurModification?: string | null;
         valide?: boolean | null;
         /** Format: date-time */
         dateValidation?: string | null;
      };
      "Evenement.jsonld-evenement.in": {
         libelle?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string | null;
         suppleants?: string[];
         enseignants?: string[];
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         tempsPreparation?: number;
         tempsSupplementaire?: number;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus: string;
         salle?: string | null;
         equipements?: string[];
         /** Format: date-time */
         dateAnnulation?: string | null;
         valide?: boolean | null;
      };
      "Evenement.jsonld-evenement.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string | null;
         suppleants?: string[];
         enseignants?: string[];
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin: string;
         tempsPreparation?: number;
         tempsSupplementaire?: number;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campus: string;
         salle?: string | null;
         equipements?: string[];
         /** Format: date-time */
         dateAnnulation?: string | null;
         /** Format: date-time */
         dateEnvoiRH?: string | null;
         /** Format: date-time */
         dateCreation?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurCreation?: string;
         /** Format: date-time */
         dateModification?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurModification?: string | null;
         valide?: boolean | null;
         /** Format: date-time */
         dateValidation?: string | null;
      };
      Formation: {
         id?: number;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         composante?: string;
         libelle?: string;
         codeExterne?: string;
         niveau?: string | null;
         discipline?: string | null;
         diplome?: string | null;
      };
      "Formation-amenagements_utilisateurs.out": {
         composante?: components["schemas"]["Composante-amenagements_utilisateurs.out"];
         libelle?: string;
      };
      "Formation-demande.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         composante?: string;
         libelle?: string;
      };
      "Formation-utilisateur.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         composante?: string;
         libelle?: string;
         codeExterne?: string;
         niveau?: string | null;
         discipline?: string | null;
         diplome?: string | null;
      };
      "Formation.jsonld": {
         "@id"?: string;
         "@type"?: string;
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         id?: number;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         composante?: string;
         libelle?: string;
         codeExterne?: string;
         niveau?: string | null;
         discipline?: string | null;
         diplome?: string | null;
      };
      "Formation.jsonld-amenagements_utilisateurs.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         composante?: components["schemas"]["Composante.jsonld-amenagements_utilisateurs.out"];
         libelle?: string;
      };
      "Formation.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         composante?: string;
         libelle?: string;
      };
      "Formation.jsonld-utilisateur.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         composante?: string;
         libelle?: string;
         codeExterne?: string;
         niveau?: string | null;
         discipline?: string | null;
         diplome?: string | null;
      };
      "Inscription-amenagements_utilisateurs.out": {
         formation?: components["schemas"]["Formation-amenagements_utilisateurs.out"];
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
      };
      "Inscription-demande.out": {
         formation?: components["schemas"]["Formation-demande.out"];
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
      };
      "Inscription-utilisateur.out": {
         formation?: components["schemas"]["Formation-utilisateur.out"];
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
      };
      "Inscription.jsonld-amenagements_utilisateurs.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         formation?: components["schemas"]["Formation.jsonld-amenagements_utilisateurs.out"];
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
      };
      "Inscription.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         formation?: components["schemas"]["Formation.jsonld-demande.out"];
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
      };
      "Inscription.jsonld-utilisateur.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         formation?: components["schemas"]["Formation.jsonld-utilisateur.out"];
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string;
      };
      IntervenantBilanFinancier: {
         uid?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string;
         activitesParPeriode?: components["schemas"]["ActiviteBilanFinancier"][];
      };
      "IntervenantBilanFinancier.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         uid?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string;
         activitesParPeriode?: components["schemas"]["ActiviteBilanFinancier.jsonld"][];
      };
      "InterventionForfait-forfait.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         periode: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         heures: string;
      };
      "InterventionForfait-forfait.out": {
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         periode: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         heures: string;
         /** Format: date-time */
         dateCreation?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurCreation?: string;
         /** Format: date-time */
         dateModification?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurModification?: string | null;
      };
      "InterventionForfait.jsonld-forfait.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         periode: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         heures: string;
      };
      "InterventionForfait.jsonld-forfait.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant: string;
         beneficiaires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         periode: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type: string;
         heures: string;
         /** Format: date-time */
         dateCreation?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurCreation?: string;
         /** Format: date-time */
         dateModification?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurModification?: string | null;
      };
      "LigneServiceFait-services_faits.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type?: string;
         nbHeures?: string;
         tauxHoraire?: components["schemas"]["TauxHoraire-services_faits.out"] | null;
      };
      "LigneServiceFait.jsonld-services_faits.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         intervenant?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         type?: string;
         nbHeures?: string;
         tauxHoraire?: components["schemas"]["TauxHoraire.jsonld-services_faits.out"] | null;
      };
      "ListeSportifsHautNiveau-sportif_haut_niveau.out": {
         sportifs?: components["schemas"]["SportifHautNiveau-sportif_haut_niveau.out"][];
      };
      "ListeSportifsHautNiveau-sportif_haut_niveau.post": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         telechargement: string | null;
      };
      "ListeSportifsHautNiveau.jsonld-sportif_haut_niveau.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         sportifs?: components["schemas"]["SportifHautNiveau.jsonld-sportif_haut_niveau.out"][];
      };
      "ListeSportifsHautNiveau.jsonld-sportif_haut_niveau.post": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         telechargement: string | null;
      };
      "MembreCommission-membre_commission.in": {
         roles?: string[];
      };
      "MembreCommission-membre_commission.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateur?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         commission?: string;
         roles?: string[];
      };
      "MembreCommission.jsonld-membre_commission.in": {
         roles?: string[];
      };
      "MembreCommission.jsonld-membre_commission.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateur?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         commission?: string;
         roles?: string[];
      };
      ModificationEtatDemande: {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demande?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         etat?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         etatPrecedent?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurModification?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profil?: string | null;
         commentaire?: string | null;
         /** Format: date-time */
         dateModification?: string | null;
      };
      "ModificationEtatDemande.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demande?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         etat?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         etatPrecedent?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurModification?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         profil?: string | null;
         commentaire?: string | null;
         /** Format: date-time */
         dateModification?: string | null;
      };
      "OptionReponse-demande.out": {
         id?: number | null;
         libelle?: string;
      };
      "OptionReponse-question.out": {
         id?: number | null;
         libelle?: string;
         questionsLiees?: string[];
      };
      "OptionReponse-reponse.out": {
         id?: number | null;
         libelle?: string;
         questionsLiees?: string[];
      };
      "OptionReponse.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
      };
      "OptionReponse.jsonld-question.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         questionsLiees?: string[];
      };
      "OptionReponse.jsonld-reponse.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         questionsLiees?: string[];
      };
      "Parametre-param.out": {
         cle?: string;
         fichier?: boolean;
         valeurs?: string[];
         valeursCourantes?: components["schemas"]["ValeurParametre-param.out"][];
      };
      "Parametre.jsonld-param.out": {
         "@id"?: string;
         "@type"?: string;
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         cle?: string;
         fichier?: boolean;
         valeurs?: string[];
         valeursCourantes?: components["schemas"]["ValeurParametre.jsonld-param.out"][];
      };
      ParametreUI: {
         valeur?: string;
      };
      "ParametreUI.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         valeur?: string;
      };
      "PeriodeRH-periode.in": {
         /** Format: date-time */
         debut: string | null;
         /** Format: date-time */
         fin: string | null;
         /** Format: date-time */
         butoir: string | null;
         envoyee?: boolean;
      };
      "PeriodeRH-periode.out": {
         id?: number | null;
         /** Format: date-time */
         debut: string | null;
         /** Format: date-time */
         fin: string | null;
         /** Format: date-time */
         butoir: string | null;
         envoyee?: boolean;
         /** Format: date-time */
         dateEnvoi?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurEnvoi?: string | null;
      };
      "PeriodeRH-services_faits.out": {
         id?: number | null;
         /** Format: date-time */
         debut: string | null;
         /** Format: date-time */
         fin: string | null;
         /** Format: date-time */
         dateEnvoi?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurEnvoi?: string | null;
      };
      "PeriodeRH.jsonld-periode.in": {
         /** Format: date-time */
         debut: string | null;
         /** Format: date-time */
         fin: string | null;
         /** Format: date-time */
         butoir: string | null;
         envoyee?: boolean;
      };
      "PeriodeRH.jsonld-periode.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         /** Format: date-time */
         debut: string | null;
         /** Format: date-time */
         fin: string | null;
         /** Format: date-time */
         butoir: string | null;
         envoyee?: boolean;
         /** Format: date-time */
         dateEnvoi?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurEnvoi?: string | null;
      };
      "PeriodeRH.jsonld-services_faits.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         /** Format: date-time */
         debut: string | null;
         /** Format: date-time */
         fin: string | null;
         /** Format: date-time */
         dateEnvoi?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurEnvoi?: string | null;
      };
      Photo: {
         uid?: string;
         data?: string;
      };
      "PieceJointeBeneficiaire-piece_beneficiaire.in": {
         libelle?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string;
      };
      "PieceJointeBeneficiaire-piece_beneficiaire.out": {
         libelle?: string;
         /** Format: date-time */
         dateDepot?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurCreation?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string;
      };
      "PieceJointeBeneficiaire.jsonld-piece_beneficiaire.in": {
         libelle?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string;
      };
      "PieceJointeBeneficiaire.jsonld-piece_beneficiaire.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         libelle?: string;
         /** Format: date-time */
         dateDepot?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         utilisateurCreation?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string;
      };
      "ProfilBeneficiaire-profil.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         avecTypologie?: boolean;
      };
      "ProfilBeneficiaire-profil.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         avecTypologie?: boolean;
      };
      "ProfilBeneficiaire.jsonld-profil.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         avecTypologie?: boolean;
      };
      "ProfilBeneficiaire.jsonld-profil.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         avecTypologie?: boolean;
      };
      "Question-question.out": {
         id?: number | null;
         libelle?: string;
         aide?: string | null;
         typeReponse?: string;
         obligatoire?: boolean;
         choixMultiple?: boolean;
         optionsReponses?: components["schemas"]["OptionReponse-question.out"][];
         tableOptions?: string | null;
      };
      "Question.jsonld-question.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         aide?: string | null;
         typeReponse?: string;
         obligatoire?: boolean;
         choixMultiple?: boolean;
         optionsReponses?: components["schemas"]["OptionReponse.jsonld-question.out"][];
         tableOptions?: string | null;
      };
      "QuestionDemande-demande.out": {
         id?: number | null;
         libelle?: string;
         aide?: string | null;
         typeReponse?: string;
         obligatoire?: boolean;
         choixMultiple?: boolean;
         reponse?: components["schemas"]["ReponseDemande-demande.out"] | null;
         question?: string;
      };
      "QuestionDemande.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         aide?: string | null;
         typeReponse?: string;
         obligatoire?: boolean;
         choixMultiple?: boolean;
         reponse?: components["schemas"]["ReponseDemande.jsonld-demande.out"] | null;
         question?: string;
      };
      "Reponse-reponse.in": {
         optionsChoisies?: string[];
         commentaire?: string | null;
         piecesJustificatives?: string[];
      };
      "Reponse-reponse.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         repondant?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demande?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         question?: string;
         optionsChoisies?: components["schemas"]["OptionReponse-reponse.out"][];
         commentaire?: string | null;
         piecesJustificatives?: string[];
         /** Format: date-time */
         dateModification?: string | null;
      };
      "Reponse.jsonld-reponse.in": {
         optionsChoisies?: string[];
         commentaire?: string | null;
         piecesJustificatives?: string[];
      };
      "Reponse.jsonld-reponse.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         repondant?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         demande?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         question?: string;
         optionsChoisies?: components["schemas"]["OptionReponse.jsonld-reponse.out"][];
         commentaire?: string | null;
         piecesJustificatives?: string[];
         /** Format: date-time */
         dateModification?: string | null;
      };
      "ReponseDemande-demande.out": {
         commentaire?: string | null;
         optionsReponses?: components["schemas"]["OptionReponse-demande.out"][];
         piecesJustificatives?: string[];
      };
      "ReponseDemande.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         commentaire?: string | null;
         optionsReponses?: components["schemas"]["OptionReponse.jsonld-demande.out"][];
         piecesJustificatives?: string[];
      };
      "Service-service.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Service-service.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Service.jsonld-service.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "Service.jsonld-service.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "ServicesFaits-services_faits.out": {
         id?: number;
         periode?: components["schemas"]["PeriodeRH-services_faits.out"];
         structure?: string;
         lignes?: components["schemas"]["LigneServiceFait-services_faits.out"][];
      };
      "ServicesFaits.jsonld-services_faits.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number;
         periode?: components["schemas"]["PeriodeRH.jsonld-services_faits.out"];
         structure?: string;
         lignes?: components["schemas"]["LigneServiceFait.jsonld-services_faits.out"][];
      };
      "SportifHautNiveau-sportif_haut_niveau.out": {
         identifiantExterne?: string;
         nom?: string | null;
         prenom?: string | null;
         anneeNaissance?: number | null;
      };
      "SportifHautNiveau-sportif_haut_niveau.patch": {
         nom?: string | null;
         prenom?: string | null;
         anneeNaissance?: number | null;
      };
      "SportifHautNiveau-sportif_haut_niveau.post": {
         identifiantExterne?: string;
         nom?: string | null;
         prenom?: string | null;
         anneeNaissance?: number | null;
      };
      "SportifHautNiveau.jsonld-sportif_haut_niveau.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         identifiantExterne?: string;
         nom?: string | null;
         prenom?: string | null;
         anneeNaissance?: number | null;
      };
      "SportifHautNiveau.jsonld-sportif_haut_niveau.post": {
         identifiantExterne?: string;
         nom?: string | null;
         prenom?: string | null;
         anneeNaissance?: number | null;
      };
      TableauDeBord: {
         /** @description nb total d'événements pour le jour courant */
         evenementsJour?: number;
         /** @description différence par rapport à la veille */
         evolutionJour?: number;
         /** @description nb total d'événements sur la semaine en cours (lundi=>dimanche) */
         evenementsSemaine?: number;
         /** @description différence par rapport à la semaine précédente */
         evolutionSemaine?: number;
         /** @description nb total d'événements sur le mois */
         evenementsMois?: number;
         /** @description différence par rapport au mois précédent */
         evolutionMois?: number;
         /** @description nb d'évenements non affectés pour le jour courant */
         evenementsNonAffectesJour?: number;
         /** @description nb d'événements non affectés dans les 7 jours qui viennent */
         evenementsNonAffectesSemaine?: number;
         /** @description nb d'événements non affectés dans les 30 jours qui viennent */
         evenementsNonAffectesMois?: number;
         /** @description total nb d'événements non affectés */
         totalEvenementsNonAffectes?: number;
         /** @description nb d'événements sans bénéficiaires alors qu'ils devraient en avoir un */
         evenementsSansBeneficiaire?: number;
         /** @description nb d'événements en attente de validation */
         evenementsEnAttenteDeValidation?: number;
         /** @description nb de bénéficiaires avec un profil "à déterminer" */
         nbBeneficiairesIncomplets?: number;
         /** @description nb de demandes sur les campagnes ouvertes */
         nbDemandesEnCours?: number;
         nbDemandesParEtat?: string[];
         /** @description nb de bénéficiaires en cours */
         nbBeneficiaires?: number;
         /** @description nb d'intervenants actifs */
         nbIntervenants?: number;
         nbAvisEseEnAttente?: number;
         nbDecisionsAttenteValidation?: number;
         nbDecisionsAEditer?: number;
         nbAmenagementsEnCours?: number;
      };
      "TableauDeBord.jsonld": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /** @description nb total d'événements pour le jour courant */
         evenementsJour?: number;
         /** @description différence par rapport à la veille */
         evolutionJour?: number;
         /** @description nb total d'événements sur la semaine en cours (lundi=>dimanche) */
         evenementsSemaine?: number;
         /** @description différence par rapport à la semaine précédente */
         evolutionSemaine?: number;
         /** @description nb total d'événements sur le mois */
         evenementsMois?: number;
         /** @description différence par rapport au mois précédent */
         evolutionMois?: number;
         /** @description nb d'évenements non affectés pour le jour courant */
         evenementsNonAffectesJour?: number;
         /** @description nb d'événements non affectés dans les 7 jours qui viennent */
         evenementsNonAffectesSemaine?: number;
         /** @description nb d'événements non affectés dans les 30 jours qui viennent */
         evenementsNonAffectesMois?: number;
         /** @description total nb d'événements non affectés */
         totalEvenementsNonAffectes?: number;
         /** @description nb d'événements sans bénéficiaires alors qu'ils devraient en avoir un */
         evenementsSansBeneficiaire?: number;
         /** @description nb d'événements en attente de validation */
         evenementsEnAttenteDeValidation?: number;
         /** @description nb de bénéficiaires avec un profil "à déterminer" */
         nbBeneficiairesIncomplets?: number;
         /** @description nb de demandes sur les campagnes ouvertes */
         nbDemandesEnCours?: number;
         nbDemandesParEtat?: string[];
         /** @description nb de bénéficiaires en cours */
         nbBeneficiaires?: number;
         /** @description nb d'intervenants actifs */
         nbIntervenants?: number;
         nbAvisEseEnAttente?: number;
         nbDecisionsAttenteValidation?: number;
         nbDecisionsAEditer?: number;
         nbAmenagementsEnCours?: number;
      };
      "Tag-tag.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie?: string;
      };
      "Tag-tag.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie?: string;
      };
      "Tag.jsonld-tag.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie?: string;
      };
      "Tag.jsonld-tag.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie?: string;
      };
      "TagUtilisateur-tag_utilisateur.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tag: string | null;
      };
      "TagUtilisateur-tag_utilisateur.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tag: string | null;
      };
      "TagUtilisateur.jsonld-tag_utilisateur.in": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tag: string | null;
      };
      "TagUtilisateur.jsonld-tag_utilisateur.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tag: string | null;
      };
      "TauxHoraire-ActiviteBeneficiaire.out": {
         id?: number | null;
         montant: string;
      };
      "TauxHoraire-ActiviteIntervenant.out": {
         id?: number | null;
         montant: string;
      };
      "TauxHoraire-services_faits.out": {
         id?: number | null;
         montant: string;
      };
      "TauxHoraire-taux.in": {
         montant: string;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "TauxHoraire-taux.out": {
         id?: number | null;
         montant: string;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "TauxHoraire.jsonld-ActiviteBeneficiaire.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         montant: string;
      };
      "TauxHoraire.jsonld-ActiviteIntervenant.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         montant: string;
      };
      "TauxHoraire.jsonld-services_faits.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         montant: string;
      };
      "TauxHoraire.jsonld-taux.in": {
         montant: string;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "TauxHoraire.jsonld-taux.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         montant: string;
         /** Format: date-time */
         debut?: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "Telechargement-telechargement.out": {
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         proprietaire?: string;
         nom?: string;
         typeMime?: string;
         urlContenu?: string;
      };
      "Telechargement.jsonld-telechargement.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         proprietaire?: string;
         nom?: string;
         typeMime?: string;
         urlContenu?: string;
      };
      "TypeAmenagement-amenagements_utilisateurs.out": {
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie: string;
      };
      "TypeAmenagement-type_amenagement.in": {
         libelle: string;
         libelleLong?: string | null;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie: string;
         pedagogique?: boolean | null;
         examens?: boolean | null;
         aideHumaine?: boolean | null;
      };
      "TypeAmenagement-type_amenagement.out": {
         id?: number | null;
         libelle: string;
         libelleLong?: string | null;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie: string;
         pedagogique?: boolean | null;
         examens?: boolean | null;
         aideHumaine?: boolean | null;
      };
      "TypeAmenagement.jsonld-amenagements_utilisateurs.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie: string;
      };
      "TypeAmenagement.jsonld-type_amenagement.in": {
         libelle: string;
         libelleLong?: string | null;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie: string;
         pedagogique?: boolean | null;
         examens?: boolean | null;
         aideHumaine?: boolean | null;
      };
      "TypeAmenagement.jsonld-type_amenagement.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         libelleLong?: string | null;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         categorie: string;
         pedagogique?: boolean | null;
         examens?: boolean | null;
         aideHumaine?: boolean | null;
      };
      "TypeDemande-type_demande.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         profilsCibles?: string[];
         visibiliteLimitee?: boolean;
         accompagnementOptionnel?: boolean;
      };
      "TypeDemande-type_demande.out": {
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         profilsCibles?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagneEnCours?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagnePrecedente?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagneSuivante?: string | null;
         etapes?: components["schemas"]["EtapeDemande-type_demande.out"][];
         visibiliteLimitee?: boolean;
         accompagnementOptionnel?: boolean;
      };
      "TypeDemande.jsonld-type_demande.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         profilsCibles?: string[];
         visibiliteLimitee?: boolean;
         accompagnementOptionnel?: boolean;
      };
      "TypeDemande.jsonld-type_demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         profilsCibles?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagneEnCours?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagnePrecedente?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         campagneSuivante?: string | null;
         etapes?: components["schemas"]["EtapeDemande.jsonld-type_demande.out"][];
         visibiliteLimitee?: boolean;
         accompagnementOptionnel?: boolean;
      };
      "TypeEngagement-types_engagements.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEngagement-types_engagements.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEngagement.jsonld-types_engagements.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEngagement.jsonld-types_engagements.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEquipement-type_equipement.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEquipement-type_equipement.out": {
         id?: number;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEquipement.jsonld-type_equipement.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEquipement.jsonld-type_equipement.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeEvenement-typesEvenements.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         couleur?: string | null;
         /**
          * @default true
          * @example true
          */
         visibleParDefaut?: boolean;
         avecValidation?: boolean;
         tauxHoraires?: string[];
         forfait?: boolean;
      };
      "TypeEvenement-typesEvenements.out": {
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         couleur?: string | null;
         /**
          * @default true
          * @example true
          */
         visibleParDefaut?: boolean;
         avecValidation?: boolean;
         tauxHoraires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tauxActif?: string | null;
         forfait?: boolean;
      };
      "TypeEvenement.jsonld-typesEvenements.in": {
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         couleur?: string | null;
         /**
          * @default true
          * @example true
          */
         visibleParDefaut?: boolean;
         avecValidation?: boolean;
         tauxHoraires?: string[];
         forfait?: boolean;
      };
      "TypeEvenement.jsonld-typesEvenements.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
         couleur?: string | null;
         /**
          * @default true
          * @example true
          */
         visibleParDefaut?: boolean;
         avecValidation?: boolean;
         tauxHoraires?: string[];
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         tauxActif?: string | null;
         forfait?: boolean;
      };
      "TypeSuiviAmenagement-type_suivi_amenagement.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeSuiviAmenagement-type_suivi_amenagement.out": {
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeSuiviAmenagement.jsonld-type_suivi_amenagement.in": {
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypeSuiviAmenagement.jsonld-type_suivi_amenagement.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         /**
          * @default true
          * @example true
          */
         actif?: boolean;
      };
      "TypologieHandicap-typologies.in": {
         libelle?: string;
         actif?: boolean;
      };
      "TypologieHandicap-typologies.out": {
         id?: number | null;
         libelle?: string;
         actif?: boolean;
      };
      "TypologieHandicap.jsonld-typologies.in": {
         libelle?: string;
         actif?: boolean;
      };
      "TypologieHandicap.jsonld-typologies.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         libelle?: string;
         actif?: boolean;
      };
      "Utilisateur-ActiviteBeneficiaire.out": {
         email?: string;
         nom?: string;
         prenom?: string;
      };
      "Utilisateur-ActiviteIntervenant.out": {
         email?: string;
         nom?: string;
         prenom?: string;
      };
      "Utilisateur-amenagements_utilisateurs.out": {
         uid?: string;
         nom?: string;
         prenom?: string;
         amenagements?: components["schemas"]["Amenagement-amenagements_utilisateurs.out"][];
         inscriptions?: components["schemas"]["Inscription-amenagements_utilisateurs.out"][];
      };
      "Utilisateur-demande.out": {
         uid?: string;
         nom?: string;
         prenom?: string;
         inscriptions?: components["schemas"]["Inscription-demande.out"][];
      };
      "Utilisateur-utilisateur.in": {
         /** Format: email */
         emailPerso?: string | null;
         telPerso?: string | null;
         contactUrgence?: string | null;
         roles?: string[];
         services?: string[];
         campus?: string[];
         competences?: string[];
         typesEvenements?: string[];
         profils?: string[];
         /** Format: date-time */
         intervenantDebut?: string | null;
         /** Format: date-time */
         intervenantFin?: string | null;
         abonneImmediat?: boolean;
         abonneVeille?: boolean;
         abonneAvantVeille?: boolean;
         abonneRecapHebdo?: boolean;
         numeroAnonyme?: number | null;
      };
      "Utilisateur-utilisateur.out": {
         uid?: string;
         email?: string;
         nom?: string;
         prenom?: string;
         /** Format: date-time */
         dateNaissance?: string | null;
         genre?: string | null;
         numeroEtudiant?: number | null;
         /** Format: email */
         emailPerso?: string | null;
         telPerso?: string | null;
         contactUrgence?: string | null;
         roles?: string[];
         services?: string[];
         campus?: string[];
         competences?: string[];
         typesEvenements?: string[];
         profils?: string[];
         etatAvisEse?: string;
         tags?: string[];
         gestionnairesActifs?: string[];
         /** Format: date-time */
         intervenantDebut?: string | null;
         /** Format: date-time */
         intervenantFin?: string | null;
         inscriptions?: components["schemas"]["Inscription-utilisateur.out"][];
         boursier?: boolean | null;
         statutEtudiant?: string | null;
         abonneImmediat?: boolean;
         abonneVeille?: boolean;
         abonneAvantVeille?: boolean;
         abonneRecapHebdo?: boolean;
         decisionAmenagementAnneeEnCours?:
            | components["schemas"]["DecisionAmenagementExamens-utilisateur.out"]
            | null;
         numeroAnonyme?: number | null;
      };
      "Utilisateur.jsonld-ActiviteBeneficiaire.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         email?: string;
         nom?: string;
         prenom?: string;
      };
      "Utilisateur.jsonld-ActiviteIntervenant.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         email?: string;
         nom?: string;
         prenom?: string;
      };
      "Utilisateur.jsonld-amenagements_utilisateurs.out": {
         "@id"?: string;
         "@type"?: string;
         uid?: string;
         nom?: string;
         prenom?: string;
         amenagements?: components["schemas"]["Amenagement.jsonld-amenagements_utilisateurs.out"][];
         inscriptions?: components["schemas"]["Inscription.jsonld-amenagements_utilisateurs.out"][];
      };
      "Utilisateur.jsonld-demande.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         uid?: string;
         nom?: string;
         prenom?: string;
         inscriptions?: components["schemas"]["Inscription.jsonld-demande.out"][];
      };
      "Utilisateur.jsonld-utilisateur.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         uid?: string;
         email?: string;
         nom?: string;
         prenom?: string;
         /** Format: date-time */
         dateNaissance?: string | null;
         genre?: string | null;
         numeroEtudiant?: number | null;
         /** Format: email */
         emailPerso?: string | null;
         telPerso?: string | null;
         contactUrgence?: string | null;
         roles?: string[];
         services?: string[];
         campus?: string[];
         competences?: string[];
         typesEvenements?: string[];
         profils?: string[];
         etatAvisEse?: string;
         tags?: string[];
         gestionnairesActifs?: string[];
         /** Format: date-time */
         intervenantDebut?: string | null;
         /** Format: date-time */
         intervenantFin?: string | null;
         inscriptions?: components["schemas"]["Inscription.jsonld-utilisateur.out"][];
         boursier?: boolean | null;
         statutEtudiant?: string | null;
         abonneImmediat?: boolean;
         abonneVeille?: boolean;
         abonneAvantVeille?: boolean;
         abonneRecapHebdo?: boolean;
         decisionAmenagementAnneeEnCours?:
            | components["schemas"]["DecisionAmenagementExamens.jsonld-utilisateur.out"]
            | null;
         numeroAnonyme?: number | null;
      };
      "ValeurParametre-param.out": {
         id?: number | null;
         valeur?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "ValeurParametre-valeur_param.in": {
         valeur?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "ValeurParametre-valeur_param.out": {
         id?: number | null;
         valeur?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "ValeurParametre.jsonld-param.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         valeur?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "ValeurParametre.jsonld-valeur_param.in": {
         valeur?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
      };
      "ValeurParametre.jsonld-valeur_param.out": {
         "@context"?: OneOf<
            [
               string,
               {
                  "@vocab": string;
                  /** @enum {string} */
                  hydra: "http://www.w3.org/ns/hydra/core#";
                  [key: string]: unknown;
               },
            ]
         >;
         "@id"?: string;
         "@type"?: string;
         id?: number | null;
         valeur?: string | null;
         /**
          * Format: iri-reference
          * @example https://example.com/
          */
         fichier?: string | null;
         /** Format: date-time */
         debut: string;
         /** Format: date-time */
         fin?: string | null;
      };
   };
   responses: {};
   parameters: {};
   requestBodies: {};
   headers: {};
   pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {
   /**
    * Retrieves the collection of Amenagement resources.
    * @description Retrieves the collection of Amenagement resources.
    */
   api_amenagements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            type?: string;
            "type[]"?: string[];
            "type.categorie"?: string;
            "type.categorie[]"?: string[];
            suivi?: string;
            "suivi[]"?: string[];
            nom?: string;
            "nom[]"?: string[];
            "type.pedagogique"?: boolean;
            "type.examens"?: boolean;
            "type.aideHumaine"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            tags?: string;
            "tags[]"?: string[];
            "order[beneficiaires.utilisateur.nom]"?: "asc" | "desc";
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
         };
      };
      responses: {
         /** @description Amenagement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Amenagement.jsonld-amenagement.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Amenagement-amenagement.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of Utilisateur resources.
    * @description Retrieves the collection of Utilisateur resources.
    */
   api_amenagementsutilisateurs_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            benefAvecAmenagementEnCours?: boolean;
            categorie?: string;
            "categorie[]"?: string[];
            type?: string;
            "type[]"?: string[];
            examens?: boolean;
            pedagogique?: boolean;
            aideHumaine?: boolean;
            term?: string;
            beneficiaire?: string;
            "creneau[debut]"?: string;
            "creneau[fin]"?: string;
            recherche?: string;
            tags?: string;
            "tags[]"?: string[];
            nom?: string;
            prenom?: string;
            "intervenant.typesEvenements"?: string;
            "intervenant.typesEvenements[]"?: string[];
            "intervenant.campuses"?: string;
            "intervenant.campuses[]"?: string[];
            "intervenant.competences"?: string;
            "intervenant.competences[]"?: string[];
            profil?: string;
            libelleCampus?: string;
            libelleComposante?: string;
            nomGestionnaire?: string;
            intervenantArchive?: boolean;
            "order[nom]"?: "asc" | "desc";
            "beneficiaires.avecAccompagnement"?: boolean;
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            "exists[numeroEtudiant]"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            etatAvisEse?: string;
            etatDecisionAmenagement?: string;
         };
      };
      responses: {
         /** @description Utilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Utilisateur.jsonld-amenagements_utilisateurs.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Utilisateur-amenagements_utilisateurs.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of Utilisateur resources.
    * @description Retrieves the collection of Utilisateur resources.
    */
   beneficiaires: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            term?: string;
            beneficiaire?: string;
            "creneau[debut]"?: string;
            "creneau[fin]"?: string;
            recherche?: string;
            tags?: string;
            "tags[]"?: string[];
            nom?: string;
            prenom?: string;
            "intervenant.typesEvenements"?: string;
            "intervenant.typesEvenements[]"?: string[];
            "intervenant.campuses"?: string;
            "intervenant.campuses[]"?: string[];
            "intervenant.competences"?: string;
            "intervenant.competences[]"?: string[];
            profil?: string;
            libelleCampus?: string;
            libelleComposante?: string;
            nomGestionnaire?: string;
            intervenantArchive?: boolean;
            "order[nom]"?: "asc" | "desc";
            "beneficiaires.avecAccompagnement"?: boolean;
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            "exists[numeroEtudiant]"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            etatAvisEse?: string;
            etatDecisionAmenagement?: string;
         };
      };
      responses: {
         /** @description Utilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Utilisateur.jsonld-utilisateur.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Utilisateur-utilisateur.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of PieceJointeBeneficiaire resources.
    * @description Retrieves the collection of PieceJointeBeneficiaire resources.
    */
   api_beneficiaires_uidpieces_jointes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
         path: {
            /** @description PieceJointeBeneficiaire identifier */
            uid: string;
         };
      };
      responses: {
         /** @description PieceJointeBeneficiaire collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["PieceJointeBeneficiaire.jsonld-piece_beneficiaire.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["PieceJointeBeneficiaire-piece_beneficiaire.out"][];
            };
         };
      };
   };
   /**
    * Creates a PieceJointeBeneficiaire resource.
    * @description Creates a PieceJointeBeneficiaire resource.
    */
   api_beneficiaires_uidpieces_jointes_post: {
      parameters: {
         path: {
            /** @description PieceJointeBeneficiaire identifier */
            uid: string;
         };
      };
      /** @description The new PieceJointeBeneficiaire resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["PieceJointeBeneficiaire.jsonld-piece_beneficiaire.in"];
            "text/html": components["schemas"]["PieceJointeBeneficiaire-piece_beneficiaire.in"];
         };
      };
      responses: {
         /** @description PieceJointeBeneficiaire resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["PieceJointeBeneficiaire.jsonld-piece_beneficiaire.out"];
               "text/html": components["schemas"]["PieceJointeBeneficiaire-piece_beneficiaire.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a PieceJointeBeneficiaire resource.
    * @description Retrieves a PieceJointeBeneficiaire resource.
    */
   api_beneficiaires_uidpieces_jointes_id_get: {
      parameters: {
         path: {
            /** @description PieceJointeBeneficiaire identifier */
            uid: string;
            /** @description PieceJointeBeneficiaire identifier */
            id: string;
         };
      };
      responses: {
         /** @description PieceJointeBeneficiaire resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["PieceJointeBeneficiaire.jsonld-piece_beneficiaire.out"];
               "text/html": components["schemas"]["PieceJointeBeneficiaire-piece_beneficiaire.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the PieceJointeBeneficiaire resource.
    * @description Removes the PieceJointeBeneficiaire resource.
    */
   api_beneficiaires_uidpieces_jointes_id_delete: {
      parameters: {
         path: {
            /** @description PieceJointeBeneficiaire identifier */
            uid: string;
            /** @description PieceJointeBeneficiaire identifier */
            id: string;
         };
      };
      responses: {
         /** @description PieceJointeBeneficiaire resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Campus resources.
    * @description Retrieves the collection of Campus resources.
    */
   api_campus_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description Campus collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Campus.jsonld-campus.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Campus-campus.out"][];
            };
         };
      };
   };
   /**
    * Creates a Campus resource.
    * @description Creates a Campus resource.
    */
   api_campus_post: {
      /** @description The new Campus resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Campus.jsonld-campus.in"];
            "text/html": components["schemas"]["Campus-campus.in"];
         };
      };
      responses: {
         /** @description Campus resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Campus.jsonld-campus.out"];
               "text/html": components["schemas"]["Campus-campus.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Campus resource.
    * @description Retrieves a Campus resource.
    */
   api_campus_id_get: {
      parameters: {
         path: {
            /** @description Campus identifier */
            id: string;
         };
      };
      responses: {
         /** @description Campus resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Campus.jsonld-campus.out"];
               "text/html": components["schemas"]["Campus-campus.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Campus resource.
    * @description Updates the Campus resource.
    */
   api_campus_id_patch: {
      parameters: {
         path: {
            /** @description Campus identifier */
            id: string;
         };
      };
      /** @description The updated Campus resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Campus-campus.in"];
         };
      };
      responses: {
         /** @description Campus resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Campus.jsonld-campus.out"];
               "text/html": components["schemas"]["Campus-campus.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of CategorieAmenagement resources.
    * @description Retrieves the collection of CategorieAmenagement resources.
    */
   api_categories_amenagements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
            "typesAmenagement.examens"?: boolean;
            "typesAmenagement.pedagogique"?: boolean;
            "typesAmenagement.aideHumaine"?: boolean;
         };
      };
      responses: {
         /** @description CategorieAmenagement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["CategorieAmenagement.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["CategorieAmenagement"][];
            };
         };
      };
   };
   /**
    * Creates a CategorieAmenagement resource.
    * @description Creates a CategorieAmenagement resource.
    */
   api_categories_amenagements_post: {
      /** @description The new CategorieAmenagement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["CategorieAmenagement.jsonld-categorie_amenagement.in"];
            "text/html": components["schemas"]["CategorieAmenagement-categorie_amenagement.in"];
         };
      };
      responses: {
         /** @description CategorieAmenagement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["CategorieAmenagement.jsonld"];
               "text/html": components["schemas"]["CategorieAmenagement"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a CategorieAmenagement resource.
    * @description Retrieves a CategorieAmenagement resource.
    */
   api_categories_amenagements_id_get: {
      parameters: {
         path: {
            /** @description CategorieAmenagement identifier */
            id: string;
         };
      };
      responses: {
         /** @description CategorieAmenagement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CategorieAmenagement.jsonld"];
               "text/html": components["schemas"]["CategorieAmenagement"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the CategorieAmenagement resource.
    * @description Updates the CategorieAmenagement resource.
    */
   api_categories_amenagements_id_patch: {
      parameters: {
         path: {
            /** @description CategorieAmenagement identifier */
            id: string;
         };
      };
      /** @description The updated CategorieAmenagement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["CategorieAmenagement-categorie_amenagement.in"];
         };
      };
      responses: {
         /** @description CategorieAmenagement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CategorieAmenagement.jsonld"];
               "text/html": components["schemas"]["CategorieAmenagement"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of CategorieTag resources.
    * @description Retrieves the collection of CategorieTag resources.
    */
   api_categories_tags_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description CategorieTag collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["CategorieTag.jsonld-categorie_tag.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["CategorieTag-categorie_tag.out"][];
            };
         };
      };
   };
   /**
    * Creates a CategorieTag resource.
    * @description Creates a CategorieTag resource.
    */
   api_categories_tags_post: {
      /** @description The new CategorieTag resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["CategorieTag.jsonld-categorie_tag.in"];
            "text/html": components["schemas"]["CategorieTag-categorie_tag.in"];
         };
      };
      responses: {
         /** @description CategorieTag resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["CategorieTag.jsonld-categorie_tag.out"];
               "text/html": components["schemas"]["CategorieTag-categorie_tag.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a CategorieTag resource.
    * @description Retrieves a CategorieTag resource.
    */
   api_categories_tags_id_get: {
      parameters: {
         path: {
            /** @description CategorieTag identifier */
            id: string;
         };
      };
      responses: {
         /** @description CategorieTag resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CategorieTag.jsonld-categorie_tag.out"];
               "text/html": components["schemas"]["CategorieTag-categorie_tag.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the CategorieTag resource.
    * @description Updates the CategorieTag resource.
    */
   api_categories_tags_id_patch: {
      parameters: {
         path: {
            /** @description CategorieTag identifier */
            id: string;
         };
      };
      /** @description The updated CategorieTag resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["CategorieTag-categorie_tag.in"];
         };
      };
      responses: {
         /** @description CategorieTag resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CategorieTag.jsonld-categorie_tag.out"];
               "text/html": components["schemas"]["CategorieTag-categorie_tag.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Tag resources.
    * @description Retrieves the collection of Tag resources.
    */
   api_categories_tags_idtags_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
         path: {
            /** @description Tag identifier */
            id: string;
         };
      };
      responses: {
         /** @description Tag collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Tag.jsonld-tag.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Tag-tag.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of Charte resources.
    * @description Retrieves the collection of Charte resources.
    */
   api_chartes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
      };
      responses: {
         /** @description Charte collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Charte.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Charte"][];
            };
         };
      };
   };
   /**
    * Creates a Charte resource.
    * @description Creates a Charte resource.
    */
   api_chartes_post: {
      /** @description The new Charte resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Charte.jsonld"];
            "text/html": components["schemas"]["Charte"];
         };
      };
      responses: {
         /** @description Charte resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Charte.jsonld"];
               "text/html": components["schemas"]["Charte"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Charte resource.
    * @description Retrieves a Charte resource.
    */
   api_chartes_id_get: {
      parameters: {
         path: {
            /** @description Charte identifier */
            id: string;
         };
      };
      responses: {
         /** @description Charte resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Charte.jsonld"];
               "text/html": components["schemas"]["Charte"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the Charte resource.
    * @description Removes the Charte resource.
    */
   api_chartes_id_delete: {
      parameters: {
         path: {
            /** @description Charte identifier */
            id: string;
         };
      };
      responses: {
         /** @description Charte resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Charte resource.
    * @description Updates the Charte resource.
    */
   api_chartes_id_patch: {
      parameters: {
         path: {
            /** @description Charte identifier */
            id: string;
         };
      };
      /** @description The updated Charte resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Charte"];
         };
      };
      responses: {
         /** @description Charte resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Charte.jsonld"];
               "text/html": components["schemas"]["Charte"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of ClubSportif resources.
    * @description Retrieves the collection of ClubSportif resources.
    */
   api_clubs_sportifs_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description ClubSportif collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["ClubSportif.jsonld-club_sportif.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["ClubSportif-club_sportif.out"][];
            };
         };
      };
   };
   /**
    * Creates a ClubSportif resource.
    * @description Creates a ClubSportif resource.
    */
   api_clubs_sportifs_post: {
      /** @description The new ClubSportif resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["ClubSportif.jsonld-club_sportif.in"];
            "text/html": components["schemas"]["ClubSportif-club_sportif.in"];
         };
      };
      responses: {
         /** @description ClubSportif resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["ClubSportif.jsonld-club_sportif.out"];
               "text/html": components["schemas"]["ClubSportif-club_sportif.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a ClubSportif resource.
    * @description Retrieves a ClubSportif resource.
    */
   api_clubs_sportifs_id_get: {
      parameters: {
         path: {
            /** @description ClubSportif identifier */
            id: string;
         };
      };
      responses: {
         /** @description ClubSportif resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ClubSportif.jsonld-club_sportif.out"];
               "text/html": components["schemas"]["ClubSportif-club_sportif.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the ClubSportif resource.
    * @description Updates the ClubSportif resource.
    */
   api_clubs_sportifs_id_patch: {
      parameters: {
         path: {
            /** @description ClubSportif identifier */
            id: string;
         };
      };
      /** @description The updated ClubSportif resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["ClubSportif-club_sportif.in"];
         };
      };
      responses: {
         /** @description ClubSportif resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ClubSportif.jsonld-club_sportif.out"];
               "text/html": components["schemas"]["ClubSportif-club_sportif.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Commission resources.
    * @description Retrieves the collection of Commission resources.
    */
   api_commissions_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description Commission collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Commission.jsonld-commission.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Commission-commission.out"][];
            };
         };
      };
   };
   /**
    * Creates a Commission resource.
    * @description Creates a Commission resource.
    */
   api_commissions_post: {
      /** @description The new Commission resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Commission.jsonld-commission.in"];
            "text/html": components["schemas"]["Commission-commission.in"];
         };
      };
      responses: {
         /** @description Commission resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Commission.jsonld-commission.out"];
               "text/html": components["schemas"]["Commission-commission.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of MembreCommission resources.
    * @description Retrieves the collection of MembreCommission resources.
    */
   api_commissions_commissionIdmembres_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
         path: {
            /** @description MembreCommission identifier */
            commissionId: string;
         };
      };
      responses: {
         /** @description MembreCommission collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["MembreCommission.jsonld-membre_commission.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["MembreCommission-membre_commission.out"][];
            };
         };
      };
   };
   /**
    * Retrieves a MembreCommission resource.
    * @description Retrieves a MembreCommission resource.
    */
   api_commissions_commissionIdmembres_uid_get: {
      parameters: {
         path: {
            /** @description MembreCommission identifier */
            commissionId: string;
            /** @description MembreCommission identifier */
            uid: string;
         };
      };
      responses: {
         /** @description MembreCommission resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["MembreCommission.jsonld-membre_commission.out"];
               "text/html": components["schemas"]["MembreCommission-membre_commission.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Replaces the MembreCommission resource.
    * @description Replaces the MembreCommission resource.
    */
   api_commissions_commissionIdmembres_uid_put: {
      parameters: {
         path: {
            /** @description MembreCommission identifier */
            commissionId: string;
            /** @description MembreCommission identifier */
            uid: string;
         };
      };
      /** @description The updated MembreCommission resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["MembreCommission.jsonld-membre_commission.in"];
            "text/html": components["schemas"]["MembreCommission-membre_commission.in"];
         };
      };
      responses: {
         /** @description MembreCommission resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["MembreCommission.jsonld-membre_commission.out"];
               "text/html": components["schemas"]["MembreCommission-membre_commission.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Removes the MembreCommission resource.
    * @description Removes the MembreCommission resource.
    */
   api_commissions_commissionIdmembres_uid_delete: {
      parameters: {
         path: {
            /** @description MembreCommission identifier */
            commissionId: string;
            /** @description MembreCommission identifier */
            uid: string;
         };
      };
      responses: {
         /** @description MembreCommission resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Commission resource.
    * @description Retrieves a Commission resource.
    */
   api_commissions_id_get: {
      parameters: {
         path: {
            /** @description Commission identifier */
            id: string;
         };
      };
      responses: {
         /** @description Commission resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Commission.jsonld-commission.out"];
               "text/html": components["schemas"]["Commission-commission.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Commission resource.
    * @description Updates the Commission resource.
    */
   api_commissions_id_patch: {
      parameters: {
         path: {
            /** @description Commission identifier */
            id: string;
         };
      };
      /** @description The updated Commission resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Commission-commission.in"];
         };
      };
      responses: {
         /** @description Commission resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Commission.jsonld-commission.out"];
               "text/html": components["schemas"]["Commission-commission.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Competence resources.
    * @description Retrieves the collection of Competence resources.
    */
   api_competences_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description Competence collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Competence.jsonld-competence.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Competence-competence.out"][];
            };
         };
      };
   };
   /**
    * Creates a Competence resource.
    * @description Creates a Competence resource.
    */
   api_competences_post: {
      /** @description The new Competence resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Competence.jsonld-competence.in"];
            "text/html": components["schemas"]["Competence-competence.in"];
         };
      };
      responses: {
         /** @description Competence resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Competence.jsonld-competence.out"];
               "text/html": components["schemas"]["Competence-competence.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Competence resource.
    * @description Retrieves a Competence resource.
    */
   api_competences_id_get: {
      parameters: {
         path: {
            /** @description Competence identifier */
            id: string;
         };
      };
      responses: {
         /** @description Competence resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Competence.jsonld-competence.out"];
               "text/html": components["schemas"]["Competence-competence.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Competence resource.
    * @description Updates the Competence resource.
    */
   api_competences_id_patch: {
      parameters: {
         path: {
            /** @description Competence identifier */
            id: string;
         };
      };
      /** @description The updated Competence resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Competence-competence.in"];
         };
      };
      responses: {
         /** @description Competence resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Competence.jsonld-competence.out"];
               "text/html": components["schemas"]["Competence-competence.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Composante resources.
    * @description Retrieves the collection of Composante resources.
    */
   api_composantes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description Composante collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Composante.jsonld-composante.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Composante-composante.out"][];
            };
         };
      };
   };
   /**
    * Retrieves a Composante resource.
    * @description Retrieves a Composante resource.
    */
   api_composantes_id_get: {
      parameters: {
         path: {
            /** @description Composante identifier */
            id: string;
         };
      };
      responses: {
         /** @description Composante resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Composante.jsonld-composante.out"];
               "text/html": components["schemas"]["Composante-composante.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Composante resource.
    * @description Updates the Composante resource.
    */
   api_composantes_id_patch: {
      parameters: {
         path: {
            /** @description Composante identifier */
            id: string;
         };
      };
      /** @description The updated Composante resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Composante-composante.in"];
         };
      };
      responses: {
         /** @description Composante resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Composante.jsonld-composante.out"];
               "text/html": components["schemas"]["Composante-composante.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Demande resources.
    * @description Retrieves the collection of Demande resources.
    */
   api_demandes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "demandeur.nom"?: string;
            "demandeur.prenom"?: string;
            etat?: string;
            "etat[]"?: string[];
            "campagne.typeDemande"?: string;
            "campagne.typeDemande[]"?: string[];
            "campagne.typeDemande.libelle"?: string;
            campagne?: string;
            "campagne[]"?: string[];
            demandeur?: string;
            "demandeur[]"?: string[];
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            libelleComposante?: string;
            "libelleComposante[]"?: string[];
            libelleFormation?: string;
            "libelleFormation[]"?: string[];
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            discipline?: string;
            "discipline[]"?: string[];
            "order[demandeur.nom]"?: "asc" | "desc";
            "order[dateDepot]"?: "asc" | "desc";
            format_simple?: boolean;
            archivees?: boolean;
         };
      };
      responses: {
         /** @description Demande collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Demande.jsonld-demande.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Demande-demande.out"][];
            };
         };
      };
   };
   /**
    * Creates a Demande resource.
    * @description Creates a Demande resource.
    */
   api_demandes_post: {
      /** @description The new Demande resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Demande.jsonld-demande.in"];
            "text/html": components["schemas"]["Demande-demande.in"];
         };
      };
      responses: {
         /** @description Demande resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Demande.jsonld-demande.out"];
               "text/html": components["schemas"]["Demande-demande.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of ModificationEtatDemande resources.
    * @description Retrieves the collection of ModificationEtatDemande resources.
    */
   api_demandes_demandeIdmodifications_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[dateModification]"?: "asc" | "desc";
            "order[id]"?: "asc" | "desc";
            "dateModification[before]"?: string;
            "dateModification[strictly_before]"?: string;
            "dateModification[after]"?: string;
            "dateModification[strictly_after]"?: string;
            demande?: string;
            "demande[]"?: string[];
         };
         path: {
            /** @description ModificationEtatDemande identifier */
            demandeId: string;
         };
      };
      responses: {
         /** @description ModificationEtatDemande collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["ModificationEtatDemande.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["ModificationEtatDemande"][];
            };
         };
      };
   };
   /**
    * Retrieves a ModificationEtatDemande resource.
    * @description Retrieves a ModificationEtatDemande resource.
    */
   api_demandes_demandeIdmodifications_id_get: {
      parameters: {
         path: {
            /** @description ModificationEtatDemande identifier */
            demandeId: string;
            /** @description ModificationEtatDemande identifier */
            id: string;
         };
      };
      responses: {
         /** @description ModificationEtatDemande resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ModificationEtatDemande.jsonld"];
               "text/html": components["schemas"]["ModificationEtatDemande"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Reponse resource.
    * @description Retrieves a Reponse resource.
    */
   api_demandes_demandeIdquestions_questionIdreponse_get: {
      parameters: {
         path: {
            /** @description Reponse identifier */
            demandeId: string;
            /** @description Reponse identifier */
            questionId: string;
         };
      };
      responses: {
         /** @description Reponse resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Reponse.jsonld-reponse.out"];
               "text/html": components["schemas"]["Reponse-reponse.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Replaces the Reponse resource.
    * @description Replaces the Reponse resource.
    */
   api_demandes_demandeIdquestions_questionIdreponse_put: {
      parameters: {
         path: {
            /** @description Reponse identifier */
            demandeId: string;
            /** @description Reponse identifier */
            questionId: string;
         };
      };
      /** @description The updated Reponse resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Reponse.jsonld-reponse.in"];
            "text/html": components["schemas"]["Reponse-reponse.in"];
         };
      };
      responses: {
         /** @description Reponse resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Reponse.jsonld-reponse.out"];
               "text/html": components["schemas"]["Reponse-reponse.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Demande resource.
    * @description Retrieves a Demande resource.
    */
   api_demandes_id_get: {
      parameters: {
         path: {
            /** @description Demande identifier */
            id: string;
         };
      };
      responses: {
         /** @description Demande resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Demande.jsonld-demande.out"];
               "text/html": components["schemas"]["Demande-demande.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Demande resource.
    * @description Updates the Demande resource.
    */
   api_demandes_id_patch: {
      parameters: {
         path: {
            /** @description Demande identifier */
            id: string;
         };
      };
      /** @description The updated Demande resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Demande-demande.modif"];
         };
      };
      responses: {
         /** @description Demande resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Demande.jsonld-demande.out"];
               "text/html": components["schemas"]["Demande-demande.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of DisciplineArtistique resources.
    * @description Retrieves the collection of DisciplineArtistique resources.
    */
   api_disciplines_artistiques_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description DisciplineArtistique collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["DisciplineArtistique.jsonld-disciplines_artistiques.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["DisciplineArtistique-disciplines_artistiques.out"][];
            };
         };
      };
   };
   /**
    * Creates a DisciplineArtistique resource.
    * @description Creates a DisciplineArtistique resource.
    */
   api_disciplines_artistiques_post: {
      /** @description The new DisciplineArtistique resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["DisciplineArtistique.jsonld-disciplines_artistiques.in"];
            "text/html": components["schemas"]["DisciplineArtistique-disciplines_artistiques.in"];
         };
      };
      responses: {
         /** @description DisciplineArtistique resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["DisciplineArtistique.jsonld-disciplines_artistiques.out"];
               "text/html": components["schemas"]["DisciplineArtistique-disciplines_artistiques.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a DisciplineArtistique resource.
    * @description Retrieves a DisciplineArtistique resource.
    */
   api_disciplines_artistiques_id_get: {
      parameters: {
         path: {
            /** @description DisciplineArtistique identifier */
            id: string;
         };
      };
      responses: {
         /** @description DisciplineArtistique resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["DisciplineArtistique.jsonld-disciplines_artistiques.out"];
               "text/html": components["schemas"]["DisciplineArtistique-disciplines_artistiques.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the DisciplineArtistique resource.
    * @description Updates the DisciplineArtistique resource.
    */
   api_disciplines_artistiques_id_patch: {
      parameters: {
         path: {
            /** @description DisciplineArtistique identifier */
            id: string;
         };
      };
      /** @description The updated DisciplineArtistique resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["DisciplineArtistique-disciplines_artistiques.in"];
         };
      };
      responses: {
         /** @description DisciplineArtistique resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["DisciplineArtistique.jsonld-disciplines_artistiques.out"];
               "text/html": components["schemas"]["DisciplineArtistique-disciplines_artistiques.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of DisciplineSportive resources.
    * @description Retrieves the collection of DisciplineSportive resources.
    */
   api_disciplines_sportives_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description DisciplineSportive collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["DisciplineSportive.jsonld-discipline_sportive.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["DisciplineSportive-discipline_sportive.out"][];
            };
         };
      };
   };
   /**
    * Creates a DisciplineSportive resource.
    * @description Creates a DisciplineSportive resource.
    */
   api_disciplines_sportives_post: {
      /** @description The new DisciplineSportive resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["DisciplineSportive.jsonld-discipline_sportive.in"];
            "text/html": components["schemas"]["DisciplineSportive-discipline_sportive.in"];
         };
      };
      responses: {
         /** @description DisciplineSportive resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["DisciplineSportive.jsonld-discipline_sportive.out"];
               "text/html": components["schemas"]["DisciplineSportive-discipline_sportive.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a DisciplineSportive resource.
    * @description Retrieves a DisciplineSportive resource.
    */
   api_disciplines_sportives_id_get: {
      parameters: {
         path: {
            /** @description DisciplineSportive identifier */
            id: string;
         };
      };
      responses: {
         /** @description DisciplineSportive resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["DisciplineSportive.jsonld-discipline_sportive.out"];
               "text/html": components["schemas"]["DisciplineSportive-discipline_sportive.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the DisciplineSportive resource.
    * @description Updates the DisciplineSportive resource.
    */
   api_disciplines_sportives_id_patch: {
      parameters: {
         path: {
            /** @description DisciplineSportive identifier */
            id: string;
         };
      };
      /** @description The updated DisciplineSportive resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["DisciplineSportive-discipline_sportive.in"];
         };
      };
      responses: {
         /** @description DisciplineSportive resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["DisciplineSportive.jsonld-discipline_sportive.out"];
               "text/html": components["schemas"]["DisciplineSportive-discipline_sportive.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of EtablissementEnseignementArtistique resources.
    * @description Retrieves the collection of EtablissementEnseignementArtistique resources.
    */
   api_etablissements_enseignement_artistique_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description EtablissementEnseignementArtistique collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["EtablissementEnseignementArtistique.jsonld-etablissements_enseignement_artistique.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["EtablissementEnseignementArtistique-etablissements_enseignement_artistique.out"][];
            };
         };
      };
   };
   /**
    * Creates a EtablissementEnseignementArtistique resource.
    * @description Creates a EtablissementEnseignementArtistique resource.
    */
   api_etablissements_enseignement_artistique_post: {
      /** @description The new EtablissementEnseignementArtistique resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["EtablissementEnseignementArtistique.jsonld-etablissements_enseignement_artistique.in"];
            "text/html": components["schemas"]["EtablissementEnseignementArtistique-etablissements_enseignement_artistique.in"];
         };
      };
      responses: {
         /** @description EtablissementEnseignementArtistique resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["EtablissementEnseignementArtistique.jsonld-etablissements_enseignement_artistique.out"];
               "text/html": components["schemas"]["EtablissementEnseignementArtistique-etablissements_enseignement_artistique.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a EtablissementEnseignementArtistique resource.
    * @description Retrieves a EtablissementEnseignementArtistique resource.
    */
   api_etablissements_enseignement_artistique_id_get: {
      parameters: {
         path: {
            /** @description EtablissementEnseignementArtistique identifier */
            id: string;
         };
      };
      responses: {
         /** @description EtablissementEnseignementArtistique resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["EtablissementEnseignementArtistique.jsonld-etablissements_enseignement_artistique.out"];
               "text/html": components["schemas"]["EtablissementEnseignementArtistique-etablissements_enseignement_artistique.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the EtablissementEnseignementArtistique resource.
    * @description Updates the EtablissementEnseignementArtistique resource.
    */
   api_etablissements_enseignement_artistique_id_patch: {
      parameters: {
         path: {
            /** @description EtablissementEnseignementArtistique identifier */
            id: string;
         };
      };
      /** @description The updated EtablissementEnseignementArtistique resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["EtablissementEnseignementArtistique-etablissements_enseignement_artistique.in"];
         };
      };
      responses: {
         /** @description EtablissementEnseignementArtistique resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["EtablissementEnseignementArtistique.jsonld-etablissements_enseignement_artistique.out"];
               "text/html": components["schemas"]["EtablissementEnseignementArtistique-etablissements_enseignement_artistique.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of EtapeDemande resources.
    * @description Retrieves the collection of EtapeDemande resources.
    */
   api_etapes_demandes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
      };
      responses: {
         /** @description EtapeDemande collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["EtapeDemande.jsonld-etape_demande.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["EtapeDemande-etape_demande.out"][];
            };
         };
      };
   };
   /**
    * Retrieves a EtapeDemande resource.
    * @description Retrieves a EtapeDemande resource.
    */
   api_etapes_demandes_id_get: {
      parameters: {
         path: {
            /** @description EtapeDemande identifier */
            id: string;
         };
      };
      responses: {
         /** @description EtapeDemande resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["EtapeDemande.jsonld-etape_demande.out"];
               "text/html": components["schemas"]["EtapeDemande-etape_demande.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of EtatDemande resources.
    * @description Retrieves the collection of EtatDemande resources.
    */
   api_etats_demandes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
      };
      responses: {
         /** @description EtatDemande collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["EtatDemande.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["EtatDemande"][];
            };
         };
      };
   };
   /**
    * Retrieves a EtatDemande resource.
    * @description Retrieves a EtatDemande resource.
    */
   api_etats_demandes_id_get: {
      parameters: {
         path: {
            /** @description EtatDemande identifier */
            id: string;
         };
      };
      responses: {
         /** @description EtatDemande resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["EtatDemande.jsonld"];
               "text/html": components["schemas"]["EtatDemande"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Evenement resources.
    * @description Retrieves the collection of Evenement resources.
    */
   api_evenements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            type?: string;
            "type[]"?: string[];
            campus?: string;
            "campus[]"?: string[];
            "type.avecValidation"?: boolean;
            "type.avecValidation[]"?: boolean[];
            "type.forfait"?: boolean;
            "type.forfait[]"?: boolean[];
            "exists[periodePriseEnCompteRH]"?: boolean;
            "exists[dateAnnulation]"?: boolean;
            "exists[intervenant]"?: boolean;
            "exists[beneficiaires]"?: boolean;
            "debut[before]"?: string;
            "debut[strictly_before]"?: string;
            "debut[after]"?: string;
            "debut[strictly_after]"?: string;
            "fin[before]"?: string;
            "fin[strictly_before]"?: string;
            "fin[after]"?: string;
            "fin[strictly_after]"?: string;
            intervenant?: string;
            "intervenant[]"?: string[];
            beneficiaires?: string;
            "beneficiaires[]"?: string[];
            suppleants?: string;
            "suppleants[]"?: string[];
            utilisateurCreation?: string;
            "utilisateurCreation[]"?: string[];
            aValider?: boolean;
            nomIntervenant?: string;
         };
      };
      responses: {
         /** @description Evenement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Evenement.jsonld-evenement.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Evenement-evenement.out"][];
            };
         };
      };
   };
   /**
    * Creates a Evenement resource.
    * @description Creates a Evenement resource.
    */
   api_evenements_post: {
      /** @description The new Evenement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Evenement.jsonld-evenement.in"];
            "text/html": components["schemas"]["Evenement-evenement.in"];
         };
      };
      responses: {
         /** @description Evenement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Evenement.jsonld-evenement.out"];
               "text/html": components["schemas"]["Evenement-evenement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Evenement resource.
    * @description Retrieves a Evenement resource.
    */
   api_evenements_id_get: {
      parameters: {
         path: {
            /** @description Evenement identifier */
            id: string;
         };
      };
      responses: {
         /** @description Evenement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Evenement.jsonld-evenement.out"];
               "text/html": components["schemas"]["Evenement-evenement.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the Evenement resource.
    * @description Removes the Evenement resource.
    */
   api_evenements_id_delete: {
      parameters: {
         path: {
            /** @description Evenement identifier */
            id: string;
         };
      };
      responses: {
         /** @description Evenement resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Evenement resource.
    * @description Updates the Evenement resource.
    */
   api_evenements_id_patch: {
      parameters: {
         path: {
            /** @description Evenement identifier */
            id: string;
         };
      };
      /** @description The updated Evenement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Evenement-evenement.in"];
         };
      };
      responses: {
         /** @description Evenement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Evenement.jsonld-evenement.out"];
               "text/html": components["schemas"]["Evenement-evenement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Formation resources.
    * @description Retrieves the collection of Formation resources.
    */
   api_formations_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            composante?: string;
            "composante[]"?: string[];
            "order[libelle]"?: "asc" | "desc";
            avecInscriptions?: boolean;
         };
      };
      responses: {
         /** @description Formation collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Formation.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Formation"][];
            };
         };
      };
   };
   /**
    * Retrieves a Formation resource.
    * @description Retrieves a Formation resource.
    */
   api_formations_id_get: {
      parameters: {
         path: {
            /** @description Formation identifier */
            id: string;
         };
      };
      responses: {
         /** @description Formation resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Formation.jsonld"];
               "text/html": components["schemas"]["Formation"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Utilisateur resources.
    * @description Retrieves the collection of Utilisateur resources.
    */
   intervenants: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            term?: string;
            beneficiaire?: string;
            "creneau[debut]"?: string;
            "creneau[fin]"?: string;
            recherche?: string;
            tags?: string;
            "tags[]"?: string[];
            nom?: string;
            prenom?: string;
            "intervenant.typesEvenements"?: string;
            "intervenant.typesEvenements[]"?: string[];
            "intervenant.campuses"?: string;
            "intervenant.campuses[]"?: string[];
            "intervenant.competences"?: string;
            "intervenant.competences[]"?: string[];
            profil?: string;
            libelleCampus?: string;
            libelleComposante?: string;
            nomGestionnaire?: string;
            intervenantArchive?: boolean;
            "order[nom]"?: "asc" | "desc";
            "beneficiaires.avecAccompagnement"?: boolean;
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            "exists[numeroEtudiant]"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            etatAvisEse?: string;
            etatDecisionAmenagement?: string;
         };
      };
      responses: {
         /** @description Utilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Utilisateur.jsonld-utilisateur.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Utilisateur-utilisateur.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of ServicesFaits resources.
    * @description Retrieves the collection of ServicesFaits resources.
    */
   api_intervenants_uidservices_faits_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[debut]"?: "asc" | "desc";
         };
         path: {
            /** @description ServicesFaits identifier */
            uid: string;
         };
      };
      responses: {
         /** @description ServicesFaits collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["ServicesFaits.jsonld-services_faits.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["ServicesFaits-services_faits.out"][];
            };
         };
      };
   };
   /**
    * Retrieves a ServicesFaits resource.
    * @description Retrieves a ServicesFaits resource.
    */
   api_intervenants_uidservices_faits_id_get: {
      parameters: {
         path: {
            /** @description ServicesFaits identifier */
            uid: string;
            /** @description ServicesFaits identifier */
            id: string;
         };
      };
      responses: {
         /** @description ServicesFaits resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ServicesFaits.jsonld-services_faits.out"];
               "text/html": components["schemas"]["ServicesFaits-services_faits.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of InterventionForfait resources.
    * @description Retrieves the collection of InterventionForfait resources.
    */
   api_interventions_forfait_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            periode?: string;
            "periode[]"?: string[];
            type?: string;
            "type[]"?: string[];
            intervenant?: string;
            "intervenant[]"?: string[];
            utilisateurCreation?: string;
            "utilisateurCreation[]"?: string[];
            nomIntervenant?: string;
            "order[intervenant.utilisateur.nom]"?: "asc" | "desc";
            "periode.debut[before]"?: string;
            "periode.debut[strictly_before]"?: string;
            "periode.debut[after]"?: string;
            "periode.debut[strictly_after]"?: string;
            "periode.fin[before]"?: string;
            "periode.fin[strictly_before]"?: string;
            "periode.fin[after]"?: string;
            "periode.fin[strictly_after]"?: string;
         };
      };
      responses: {
         /** @description InterventionForfait collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["InterventionForfait.jsonld-forfait.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["InterventionForfait-forfait.out"][];
            };
         };
      };
   };
   /**
    * Creates a InterventionForfait resource.
    * @description Creates a InterventionForfait resource.
    */
   api_interventions_forfait_post: {
      /** @description The new InterventionForfait resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["InterventionForfait.jsonld-forfait.in"];
            "text/html": components["schemas"]["InterventionForfait-forfait.in"];
         };
      };
      responses: {
         /** @description InterventionForfait resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["InterventionForfait.jsonld-forfait.out"];
               "text/html": components["schemas"]["InterventionForfait-forfait.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a InterventionForfait resource.
    * @description Retrieves a InterventionForfait resource.
    */
   api_interventions_forfait_id_get: {
      parameters: {
         path: {
            /** @description InterventionForfait identifier */
            id: string;
         };
      };
      responses: {
         /** @description InterventionForfait resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["InterventionForfait.jsonld-forfait.out"];
               "text/html": components["schemas"]["InterventionForfait-forfait.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the InterventionForfait resource.
    * @description Removes the InterventionForfait resource.
    */
   api_interventions_forfait_id_delete: {
      parameters: {
         path: {
            /** @description InterventionForfait identifier */
            id: string;
         };
      };
      responses: {
         /** @description InterventionForfait resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the InterventionForfait resource.
    * @description Updates the InterventionForfait resource.
    */
   api_interventions_forfait_id_patch: {
      parameters: {
         path: {
            /** @description InterventionForfait identifier */
            id: string;
         };
      };
      /** @description The updated InterventionForfait resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["InterventionForfait-forfait.in"];
         };
      };
      responses: {
         /** @description InterventionForfait resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["InterventionForfait.jsonld-forfait.out"];
               "text/html": components["schemas"]["InterventionForfait-forfait.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a ListeSportifsHautNiveau resource.
    * @description Retrieves a ListeSportifsHautNiveau resource.
    */
   api_liste_sportifs_haut_niveau_get: {
      responses: {
         /** @description ListeSportifsHautNiveau resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ListeSportifsHautNiveau.jsonld-sportif_haut_niveau.out"];
               "text/html": components["schemas"]["ListeSportifsHautNiveau-sportif_haut_niveau.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Parametre resources.
    * @description Retrieves the collection of Parametre resources.
    */
   api_parametres_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
      };
      responses: {
         /** @description Parametre collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Parametre.jsonld-param.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Parametre-param.out"][];
            };
         };
      };
   };
   /**
    * Retrieves a Parametre resource.
    * @description Retrieves a Parametre resource.
    */
   api_parametres_cle_get: {
      parameters: {
         path: {
            /** @description Parametre identifier */
            cle: string;
         };
      };
      responses: {
         /** @description Parametre resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Parametre.jsonld-param.out"];
               "text/html": components["schemas"]["Parametre-param.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Creates a ValeurParametre resource.
    * @description Creates a ValeurParametre resource.
    */
   api_parametres_clevaleurs_post: {
      parameters: {
         path: {
            /** @description ValeurParametre identifier */
            cle: string;
         };
      };
      /** @description The new ValeurParametre resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["ValeurParametre.jsonld-valeur_param.in"];
            "text/html": components["schemas"]["ValeurParametre-valeur_param.in"];
         };
      };
      responses: {
         /** @description ValeurParametre resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["ValeurParametre.jsonld-valeur_param.out"];
               "text/html": components["schemas"]["ValeurParametre-valeur_param.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a ValeurParametre resource.
    * @description Retrieves a ValeurParametre resource.
    */
   api_parametres_clevaleurs_id_get: {
      parameters: {
         path: {
            /** @description ValeurParametre identifier */
            cle: string;
            /** @description ValeurParametre identifier */
            id: string;
         };
      };
      responses: {
         /** @description ValeurParametre resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ValeurParametre.jsonld-valeur_param.out"];
               "text/html": components["schemas"]["ValeurParametre-valeur_param.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the ValeurParametre resource.
    * @description Updates the ValeurParametre resource.
    */
   api_parametres_clevaleurs_id_patch: {
      parameters: {
         path: {
            /** @description ValeurParametre identifier */
            cle: string;
            /** @description ValeurParametre identifier */
            id: string;
         };
      };
      /** @description The updated ValeurParametre resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["ValeurParametre-valeur_param.in"];
         };
      };
      responses: {
         /** @description ValeurParametre resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ValeurParametre.jsonld-valeur_param.out"];
               "text/html": components["schemas"]["ValeurParametre-valeur_param.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of PeriodeRH resources.
    * @description Retrieves the collection of PeriodeRH resources.
    */
   api_periodes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[debut]"?: "asc" | "desc";
            "butoir[before]"?: string;
            "butoir[strictly_before]"?: string;
            "butoir[after]"?: string;
            "butoir[strictly_after]"?: string;
         };
      };
      responses: {
         /** @description PeriodeRH collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["PeriodeRH.jsonld-periode.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["PeriodeRH-periode.out"][];
            };
         };
      };
   };
   /**
    * Creates a PeriodeRH resource.
    * @description Creates a PeriodeRH resource.
    */
   api_periodes_post: {
      /** @description The new PeriodeRH resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["PeriodeRH.jsonld-periode.in"];
            "text/html": components["schemas"]["PeriodeRH-periode.in"];
         };
      };
      responses: {
         /** @description PeriodeRH resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["PeriodeRH.jsonld-periode.out"];
               "text/html": components["schemas"]["PeriodeRH-periode.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a PeriodeRH resource.
    * @description Retrieves a PeriodeRH resource.
    */
   api_periodes_id_get: {
      parameters: {
         path: {
            /** @description PeriodeRH identifier */
            id: string;
         };
      };
      responses: {
         /** @description PeriodeRH resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["PeriodeRH.jsonld-periode.out"];
               "text/html": components["schemas"]["PeriodeRH-periode.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the PeriodeRH resource.
    * @description Updates the PeriodeRH resource.
    */
   api_periodes_id_patch: {
      parameters: {
         path: {
            /** @description PeriodeRH identifier */
            id: string;
         };
      };
      /** @description The updated PeriodeRH resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["PeriodeRH-periode.in"];
         };
      };
      responses: {
         /** @description PeriodeRH resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["PeriodeRH.jsonld-periode.out"];
               "text/html": components["schemas"]["PeriodeRH-periode.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a ServicesFaits resource.
    * @description Retrieves a ServicesFaits resource.
    */
   api_periodes_idservices_faits_get: {
      parameters: {
         path: {
            /** @description ServicesFaits identifier */
            id: string;
         };
      };
      responses: {
         /** @description ServicesFaits resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ServicesFaits.jsonld-services_faits.out"];
               "text/csv": components["schemas"]["ServicesFaits-services_faits.out"];
               "application/pdf": components["schemas"]["ServicesFaits-services_faits.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of ProfilBeneficiaire resources.
    * @description Retrieves the collection of ProfilBeneficiaire resources.
    */
   api_profils_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description ProfilBeneficiaire collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["ProfilBeneficiaire.jsonld-profil.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["ProfilBeneficiaire-profil.out"][];
            };
         };
      };
   };
   /**
    * Creates a ProfilBeneficiaire resource.
    * @description Creates a ProfilBeneficiaire resource.
    */
   api_profils_post: {
      /** @description The new ProfilBeneficiaire resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["ProfilBeneficiaire.jsonld-profil.in"];
            "text/html": components["schemas"]["ProfilBeneficiaire-profil.in"];
         };
      };
      responses: {
         /** @description ProfilBeneficiaire resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["ProfilBeneficiaire.jsonld-profil.out"];
               "text/html": components["schemas"]["ProfilBeneficiaire-profil.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a ProfilBeneficiaire resource.
    * @description Retrieves a ProfilBeneficiaire resource.
    */
   api_profils_id_get: {
      parameters: {
         path: {
            /** @description ProfilBeneficiaire identifier */
            id: string;
         };
      };
      responses: {
         /** @description ProfilBeneficiaire resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ProfilBeneficiaire.jsonld-profil.out"];
               "text/html": components["schemas"]["ProfilBeneficiaire-profil.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the ProfilBeneficiaire resource.
    * @description Updates the ProfilBeneficiaire resource.
    */
   api_profils_id_patch: {
      parameters: {
         path: {
            /** @description ProfilBeneficiaire identifier */
            id: string;
         };
      };
      /** @description The updated ProfilBeneficiaire resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["ProfilBeneficiaire-profil.in"];
         };
      };
      responses: {
         /** @description ProfilBeneficiaire resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ProfilBeneficiaire.jsonld-profil.out"];
               "text/html": components["schemas"]["ProfilBeneficiaire-profil.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Question resource.
    * @description Retrieves a Question resource.
    */
   api_questions_id_get: {
      parameters: {
         path: {
            /** @description Question identifier */
            id: string;
         };
      };
      responses: {
         /** @description Question resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Question.jsonld-question.out"];
               "text/html": components["schemas"]["Question-question.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Utilisateur resources.
    * @description Retrieves the collection of Utilisateur resources.
    */
   renforts: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            term?: string;
            beneficiaire?: string;
            "creneau[debut]"?: string;
            "creneau[fin]"?: string;
            recherche?: string;
            tags?: string;
            "tags[]"?: string[];
            nom?: string;
            prenom?: string;
            "intervenant.typesEvenements"?: string;
            "intervenant.typesEvenements[]"?: string[];
            "intervenant.campuses"?: string;
            "intervenant.campuses[]"?: string[];
            "intervenant.competences"?: string;
            "intervenant.competences[]"?: string[];
            profil?: string;
            libelleCampus?: string;
            libelleComposante?: string;
            nomGestionnaire?: string;
            intervenantArchive?: boolean;
            "order[nom]"?: "asc" | "desc";
            "beneficiaires.avecAccompagnement"?: boolean;
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            "exists[numeroEtudiant]"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            etatAvisEse?: string;
            etatDecisionAmenagement?: string;
         };
      };
      responses: {
         /** @description Utilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Utilisateur.jsonld-utilisateur.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Utilisateur-utilisateur.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of Utilisateur resources.
    * @description Retrieves the collection of Utilisateur resources.
    */
   api_roles_roleIdutilisateurs_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            term?: string;
            beneficiaire?: string;
            "creneau[debut]"?: string;
            "creneau[fin]"?: string;
            recherche?: string;
            tags?: string;
            "tags[]"?: string[];
            nom?: string;
            prenom?: string;
            "intervenant.typesEvenements"?: string;
            "intervenant.typesEvenements[]"?: string[];
            "intervenant.campuses"?: string;
            "intervenant.campuses[]"?: string[];
            "intervenant.competences"?: string;
            "intervenant.competences[]"?: string[];
            profil?: string;
            libelleCampus?: string;
            libelleComposante?: string;
            nomGestionnaire?: string;
            intervenantArchive?: boolean;
            "order[nom]"?: "asc" | "desc";
            "beneficiaires.avecAccompagnement"?: boolean;
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            "exists[numeroEtudiant]"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            etatAvisEse?: string;
            etatDecisionAmenagement?: string;
         };
         path: {
            /** @description Utilisateur identifier */
            roleId: string;
         };
      };
      responses: {
         /** @description Utilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Utilisateur.jsonld-utilisateur.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Utilisateur-utilisateur.out"][];
            };
         };
      };
   };
   /**
    * Liste des services
    * @description Retourne la liste des services
    */
   api_services_get_collection: {
      parameters: {
         query?: {
            /** @description Recherche sur le libellé (partiel, insensible à la casse) */
            libelle?: string;
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description Service collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Service.jsonld-service.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Service-service.out"][];
            };
         };
      };
   };
   /**
    * Creates a Service resource.
    * @description Creates a Service resource.
    */
   api_services_post: {
      /** @description The new Service resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Service.jsonld-service.in"];
            "text/html": components["schemas"]["Service-service.in"];
         };
      };
      responses: {
         /** @description Service resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Service.jsonld-service.out"];
               "text/html": components["schemas"]["Service-service.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Détail d'un service
    * @description Retourne le détail du service demandé
    */
   api_services_id_get: {
      parameters: {
         path: {
            /** @description Service identifier */
            id: string;
         };
      };
      responses: {
         /** @description Service resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Service.jsonld-service.out"];
               "text/html": components["schemas"]["Service-service.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Service resource.
    * @description Updates the Service resource.
    */
   api_services_id_patch: {
      parameters: {
         path: {
            /** @description Service identifier */
            id: string;
         };
      };
      /** @description The updated Service resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Service-service.in"];
         };
      };
      responses: {
         /** @description Service resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Service.jsonld-service.out"];
               "text/html": components["schemas"]["Service-service.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of SportifHautNiveau resources.
    * @description Retrieves the collection of SportifHautNiveau resources.
    */
   api_sportifs_haut_niveau_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[nom]"?: "asc" | "desc";
            nom?: string;
            prenom?: string;
            identifiantExterne?: string;
         };
      };
      responses: {
         /** @description SportifHautNiveau collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["SportifHautNiveau.jsonld-sportif_haut_niveau.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["SportifHautNiveau-sportif_haut_niveau.out"][];
            };
         };
      };
   };
   /**
    * Replaces the ListeSportifsHautNiveau resource.
    * @description Replaces the ListeSportifsHautNiveau resource.
    */
   api_sportifs_haut_niveau_put: {
      /** @description The updated ListeSportifsHautNiveau resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["ListeSportifsHautNiveau.jsonld-sportif_haut_niveau.post"];
            "text/html": components["schemas"]["ListeSportifsHautNiveau-sportif_haut_niveau.post"];
         };
      };
      responses: {
         /** @description ListeSportifsHautNiveau resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ListeSportifsHautNiveau.jsonld-sportif_haut_niveau.out"];
               "text/html": components["schemas"]["ListeSportifsHautNiveau-sportif_haut_niveau.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Creates a SportifHautNiveau resource.
    * @description Creates a SportifHautNiveau resource.
    */
   api_sportifs_haut_niveau_post: {
      /** @description The new SportifHautNiveau resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["SportifHautNiveau.jsonld-sportif_haut_niveau.post"];
            "text/html": components["schemas"]["SportifHautNiveau-sportif_haut_niveau.post"];
         };
      };
      responses: {
         /** @description SportifHautNiveau resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["SportifHautNiveau.jsonld-sportif_haut_niveau.out"];
               "text/html": components["schemas"]["SportifHautNiveau-sportif_haut_niveau.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a SportifHautNiveau resource.
    * @description Retrieves a SportifHautNiveau resource.
    */
   api_sportifs_haut_niveau_identifiantExterne_get: {
      parameters: {
         path: {
            /** @description SportifHautNiveau identifier */
            identifiantExterne: string;
         };
      };
      responses: {
         /** @description SportifHautNiveau resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["SportifHautNiveau.jsonld-sportif_haut_niveau.out"];
               "text/html": components["schemas"]["SportifHautNiveau-sportif_haut_niveau.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the SportifHautNiveau resource.
    * @description Removes the SportifHautNiveau resource.
    */
   api_sportifs_haut_niveau_identifiantExterne_delete: {
      parameters: {
         path: {
            /** @description SportifHautNiveau identifier */
            identifiantExterne: string;
         };
      };
      responses: {
         /** @description SportifHautNiveau resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the SportifHautNiveau resource.
    * @description Updates the SportifHautNiveau resource.
    */
   api_sportifs_haut_niveau_identifiantExterne_patch: {
      parameters: {
         path: {
            /** @description SportifHautNiveau identifier */
            identifiantExterne: string;
         };
      };
      /** @description The updated SportifHautNiveau resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["SportifHautNiveau-sportif_haut_niveau.patch"];
         };
      };
      responses: {
         /** @description SportifHautNiveau resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["SportifHautNiveau.jsonld-sportif_haut_niveau.out"];
               "text/html": components["schemas"]["SportifHautNiveau-sportif_haut_niveau.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a TableauDeBord resource.
    * @description Retrieves a TableauDeBord resource.
    */
   api_statistiques_get: {
      parameters: {
         query?: {
            /** @description utilisateur concerné */
            utilisateur?: string;
         };
      };
      responses: {
         /** @description TableauDeBord resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TableauDeBord.jsonld"];
               "text/html": components["schemas"]["TableauDeBord"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of BilanActivite resources.
    * @description Bilan activite
    */
   api_suivisactivite_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[dateDemande]"?: "asc" | "desc";
            demandeur?: string;
            "demandeur[]"?: string[];
         };
      };
      responses: {
         /** @description BilanActivite collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["BilanActivite.jsonld-bilan-activite.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["BilanActivite-bilan-activite.out"][];
            };
         };
      };
   };
   /**
    * Creates a BilanActivite resource.
    * @description Bilan activite
    */
   api_suivisactivite_post: {
      /** @description The new BilanActivite resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["BilanActivite.jsonld-bilan-activite.in"];
            "text/html": components["schemas"]["BilanActivite-bilan-activite.in"];
         };
      };
      responses: {
         /** @description BilanActivite resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["BilanActivite.jsonld-bilan-activite.out"];
               "text/html": components["schemas"]["BilanActivite-bilan-activite.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a BilanActivite resource.
    * @description Bilan activite
    */
   api_suivisactivite_id_get: {
      parameters: {
         path: {
            /** @description BilanActivite identifier */
            id: string;
         };
      };
      responses: {
         /** @description BilanActivite resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["BilanActivite.jsonld-bilan-activite.out"];
               "text/html": components["schemas"]["BilanActivite-bilan-activite.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the BilanActivite resource.
    * @description Bilan activite
    */
   api_suivisactivite_id_delete: {
      parameters: {
         path: {
            /** @description BilanActivite identifier */
            id: string;
         };
      };
      responses: {
         /** @description BilanActivite resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of ActiviteBeneficiaire resources.
    * @description Retrieves the collection of ActiviteBeneficiaire resources.
    */
   api_suivisbeneficiaires_get_collection: {
      parameters: {
         query?: {
            type?: string;
            "type[]"?: string[];
            campus?: string;
            "campus[]"?: string[];
            "beneficiaires.profil"?: string;
            "beneficiaires.profil[]"?: string[];
            "beneficiaires.typologies"?: string;
            "beneficiaires.typologies[]"?: string[];
            beneficiaires?: string;
            "beneficiaires[]"?: string[];
            "debut[before]"?: string;
            "debut[strictly_before]"?: string;
            "debut[after]"?: string;
            "debut[strictly_after]"?: string;
            "fin[before]"?: string;
            "fin[strictly_before]"?: string;
            "fin[after]"?: string;
            "fin[strictly_after]"?: string;
            "exists[dateAnnulation]"?: boolean;
            periode?: string;
            "periode[]"?: string[];
         };
      };
      responses: {
         /** @description ActiviteBeneficiaire collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["ActiviteBeneficiaire.jsonld-ActiviteBeneficiaire.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["ActiviteBeneficiaire-ActiviteBeneficiaire.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of BilanFinancier resources.
    * @description Bilan financier
    */
   api_suivisfinanciersdebut_debutfin_fin_get_collection: {
      parameters: {
         query?: {
            profil?: string;
            "profil[]"?: string[];
            "exists[dateAnnulation]"?: boolean;
         };
         path: {
            /** @description BilanFinancier identifier */
            debut: string;
            /** @description BilanFinancier identifier */
            fin: string;
         };
      };
      responses: {
         /** @description BilanFinancier collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["BilanFinancier.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/csv": components["schemas"]["BilanFinancier"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of ActiviteIntervenant resources.
    * @description Retrieves the collection of ActiviteIntervenant resources.
    */
   api_suivisintervenants_get_collection: {
      parameters: {
         query?: {
            type?: string;
            "type[]"?: string[];
            campus?: string;
            "campus[]"?: string[];
            intervenant?: string;
            "intervenant[]"?: string[];
            "debut[before]"?: string;
            "debut[strictly_before]"?: string;
            "debut[after]"?: string;
            "debut[strictly_after]"?: string;
            "fin[before]"?: string;
            "fin[strictly_before]"?: string;
            "fin[after]"?: string;
            "fin[strictly_after]"?: string;
            "exists[intervenant]"?: boolean;
            "exists[dateAnnulation]"?: boolean;
            periode?: string;
            "periode[]"?: string[];
         };
      };
      responses: {
         /** @description ActiviteIntervenant collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["ActiviteIntervenant.jsonld-ActiviteIntervenant.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["ActiviteIntervenant-ActiviteIntervenant.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of Tag resources.
    * @description Retrieves the collection of Tag resources.
    */
   api_tags_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description Tag collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Tag.jsonld-tag.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Tag-tag.out"][];
            };
         };
      };
   };
   /**
    * Creates a Tag resource.
    * @description Creates a Tag resource.
    */
   api_tags_post: {
      /** @description The new Tag resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Tag.jsonld-tag.in"];
            "text/html": components["schemas"]["Tag-tag.in"];
         };
      };
      responses: {
         /** @description Tag resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Tag.jsonld-tag.out"];
               "text/html": components["schemas"]["Tag-tag.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Tag resource.
    * @description Retrieves a Tag resource.
    */
   api_tags_id_get: {
      parameters: {
         path: {
            /** @description Tag identifier */
            id: string;
         };
      };
      responses: {
         /** @description Tag resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Tag.jsonld-tag.out"];
               "text/html": components["schemas"]["Tag-tag.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Tag resource.
    * @description Updates the Tag resource.
    */
   api_tags_id_patch: {
      parameters: {
         path: {
            /** @description Tag identifier */
            id: string;
         };
      };
      /** @description The updated Tag resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Tag-tag.in"];
         };
      };
      responses: {
         /** @description Tag resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Tag.jsonld-tag.out"];
               "text/html": components["schemas"]["Tag-tag.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Creates a Telechargement resource.
    * @description Creates a Telechargement resource.
    */
   api_telechargements_post: {
      requestBody?: {
         content: {
            "multipart/form-data": {
               /** Format: binary */
               file?: string;
            };
         };
      };
      responses: {
         /** @description Telechargement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Telechargement.jsonld-telechargement.out"];
               "text/html": components["schemas"]["Telechargement-telechargement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Telechargement resource.
    * @description Retrieves a Telechargement resource.
    */
   api_telechargements_id_get: {
      parameters: {
         path: {
            /** @description Telechargement identifier */
            id: string;
         };
      };
      responses: {
         /** @description Telechargement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Telechargement.jsonld-telechargement.out"];
               "text/html": components["schemas"]["Telechargement-telechargement.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of TypeAmenagement resources.
    * @description Retrieves the collection of TypeAmenagement resources.
    */
   api_types_amenagements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
            examens?: boolean;
            pedagogique?: boolean;
            aideHumaine?: boolean;
         };
      };
      responses: {
         /** @description TypeAmenagement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TypeAmenagement.jsonld-type_amenagement.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TypeAmenagement-type_amenagement.out"][];
            };
         };
      };
   };
   /**
    * Creates a TypeAmenagement resource.
    * @description Creates a TypeAmenagement resource.
    */
   api_types_amenagements_post: {
      /** @description The new TypeAmenagement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TypeAmenagement.jsonld-type_amenagement.in"];
            "text/html": components["schemas"]["TypeAmenagement-type_amenagement.in"];
         };
      };
      responses: {
         /** @description TypeAmenagement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TypeAmenagement.jsonld-type_amenagement.out"];
               "text/html": components["schemas"]["TypeAmenagement-type_amenagement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a TypeAmenagement resource.
    * @description Retrieves a TypeAmenagement resource.
    */
   api_types_amenagements_id_get: {
      parameters: {
         path: {
            /** @description TypeAmenagement identifier */
            id: string;
         };
      };
      responses: {
         /** @description TypeAmenagement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeAmenagement.jsonld-type_amenagement.out"];
               "text/html": components["schemas"]["TypeAmenagement-type_amenagement.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TypeAmenagement resource.
    * @description Updates the TypeAmenagement resource.
    */
   api_types_amenagements_id_patch: {
      parameters: {
         path: {
            /** @description TypeAmenagement identifier */
            id: string;
         };
      };
      /** @description The updated TypeAmenagement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TypeAmenagement-type_amenagement.in"];
         };
      };
      responses: {
         /** @description TypeAmenagement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeAmenagement.jsonld-type_amenagement.out"];
               "text/html": components["schemas"]["TypeAmenagement-type_amenagement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of TypeDemande resources.
    * @description Retrieves the collection of TypeDemande resources.
    */
   api_types_demandes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description TypeDemande collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TypeDemande.jsonld-type_demande.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TypeDemande-type_demande.out"][];
            };
         };
      };
   };
   /**
    * Creates a TypeDemande resource.
    * @description Creates a TypeDemande resource.
    */
   api_types_demandes_post: {
      /** @description The new TypeDemande resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TypeDemande.jsonld-type_demande.in"];
            "text/html": components["schemas"]["TypeDemande-type_demande.in"];
         };
      };
      responses: {
         /** @description TypeDemande resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TypeDemande.jsonld-type_demande.out"];
               "text/html": components["schemas"]["TypeDemande-type_demande.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a TypeDemande resource.
    * @description Retrieves a TypeDemande resource.
    */
   api_types_demandes_id_get: {
      parameters: {
         path: {
            /** @description TypeDemande identifier */
            id: string;
         };
      };
      responses: {
         /** @description TypeDemande resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeDemande.jsonld-type_demande.out"];
               "text/html": components["schemas"]["TypeDemande-type_demande.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TypeDemande resource.
    * @description Updates the TypeDemande resource.
    */
   api_types_demandes_id_patch: {
      parameters: {
         path: {
            /** @description TypeDemande identifier */
            id: string;
         };
      };
      /** @description The updated TypeDemande resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TypeDemande-type_demande.in"];
         };
      };
      responses: {
         /** @description TypeDemande resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeDemande.jsonld-type_demande.out"];
               "text/html": components["schemas"]["TypeDemande-type_demande.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of CampagneDemande resources.
    * @description Retrieves the collection of CampagneDemande resources.
    */
   api_types_demandes_typeIdcampagnes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
         path: {
            /** @description CampagneDemande identifier */
            typeId: string;
         };
      };
      responses: {
         /** @description CampagneDemande collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["CampagneDemande.jsonld-campagne.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["CampagneDemande-campagne.out"][];
            };
         };
      };
   };
   /**
    * Creates a CampagneDemande resource.
    * @description Creates a CampagneDemande resource.
    */
   api_types_demandes_typeIdcampagnes_post: {
      parameters: {
         path: {
            /** @description CampagneDemande identifier */
            typeId: string;
         };
      };
      /** @description The new CampagneDemande resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["CampagneDemande.jsonld-campagne.in"];
            "text/html": components["schemas"]["CampagneDemande-campagne.in"];
         };
      };
      responses: {
         /** @description CampagneDemande resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["CampagneDemande.jsonld-campagne.out"];
               "text/html": components["schemas"]["CampagneDemande-campagne.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a CampagneDemande resource.
    * @description Retrieves a CampagneDemande resource.
    */
   api_types_demandes_typeIdcampagnes_id_get: {
      parameters: {
         path: {
            /** @description CampagneDemande identifier */
            id: string;
            /** @description CampagneDemande identifier */
            typeId: string;
         };
      };
      responses: {
         /** @description CampagneDemande resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CampagneDemande.jsonld-campagne.out"];
               "text/html": components["schemas"]["CampagneDemande-campagne.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the CampagneDemande resource.
    * @description Updates the CampagneDemande resource.
    */
   api_types_demandes_typeIdcampagnes_id_patch: {
      parameters: {
         path: {
            /** @description CampagneDemande identifier */
            id: string;
            /** @description CampagneDemande identifier */
            typeId: string;
         };
      };
      /** @description The updated CampagneDemande resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["CampagneDemande-campagne.in"];
         };
      };
      responses: {
         /** @description CampagneDemande resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CampagneDemande.jsonld-campagne.out"];
               "text/html": components["schemas"]["CampagneDemande-campagne.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Liste des types d'engagements
    * @description Retourne la liste des types d'équipements
    */
   api_types_engagements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description TypeEngagement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TypeEngagement.jsonld-types_engagements.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TypeEngagement-types_engagements.out"][];
            };
         };
      };
   };
   /**
    * Creates a TypeEngagement resource.
    * @description Creates a TypeEngagement resource.
    */
   api_types_engagements_post: {
      /** @description The new TypeEngagement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TypeEngagement.jsonld-types_engagements.in"];
            "text/html": components["schemas"]["TypeEngagement-types_engagements.in"];
         };
      };
      responses: {
         /** @description TypeEngagement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TypeEngagement.jsonld-types_engagements.out"];
               "text/html": components["schemas"]["TypeEngagement-types_engagements.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Détail d'un types d'engagements
    * @description Retourne le détail du type d'équipement demandé
    */
   api_types_engagements_id_get: {
      parameters: {
         path: {
            /** @description TypeEngagement identifier */
            id: string;
         };
      };
      responses: {
         /** @description TypeEngagement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeEngagement.jsonld-types_engagements.out"];
               "text/html": components["schemas"]["TypeEngagement-types_engagements.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TypeEngagement resource.
    * @description Updates the TypeEngagement resource.
    */
   api_types_engagements_id_patch: {
      parameters: {
         path: {
            /** @description TypeEngagement identifier */
            id: string;
         };
      };
      /** @description The updated TypeEngagement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TypeEngagement-types_engagements.in"];
         };
      };
      responses: {
         /** @description TypeEngagement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeEngagement.jsonld-types_engagements.out"];
               "text/html": components["schemas"]["TypeEngagement-types_engagements.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Liste des types d'équipements
    * @description Retourne la liste des types d'équipements
    */
   api_types_equipements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description TypeEquipement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TypeEquipement.jsonld-type_equipement.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TypeEquipement-type_equipement.out"][];
            };
         };
      };
   };
   /**
    * Creates a TypeEquipement resource.
    * @description Creates a TypeEquipement resource.
    */
   api_types_equipements_post: {
      /** @description The new TypeEquipement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TypeEquipement.jsonld-type_equipement.in"];
            "text/html": components["schemas"]["TypeEquipement-type_equipement.in"];
         };
      };
      responses: {
         /** @description TypeEquipement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TypeEquipement.jsonld-type_equipement.out"];
               "text/html": components["schemas"]["TypeEquipement-type_equipement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Détail d'un types d'équipements
    * @description Retourne le détail du type d'équipement demandé
    */
   api_types_equipements_id_get: {
      parameters: {
         path: {
            /** @description TypeEquipement identifier */
            id: string;
         };
      };
      responses: {
         /** @description TypeEquipement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeEquipement.jsonld-type_equipement.out"];
               "text/html": components["schemas"]["TypeEquipement-type_equipement.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TypeEquipement resource.
    * @description Updates the TypeEquipement resource.
    */
   api_types_equipements_id_patch: {
      parameters: {
         path: {
            /** @description TypeEquipement identifier */
            id: string;
         };
      };
      /** @description The updated TypeEquipement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TypeEquipement-type_equipement.in"];
         };
      };
      responses: {
         /** @description TypeEquipement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeEquipement.jsonld-type_equipement.out"];
               "text/html": components["schemas"]["TypeEquipement-type_equipement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Liste des types d'événements
    * @description Retourne la liste des types d'événements
    */
   api_types_evenements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            forfait?: boolean;
         };
      };
      responses: {
         /** @description TypeEvenement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TypeEvenement.jsonld-typesEvenements.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TypeEvenement-typesEvenements.out"][];
            };
         };
      };
   };
   /**
    * Creates a TypeEvenement resource.
    * @description Creates a TypeEvenement resource.
    */
   api_types_evenements_post: {
      /** @description The new TypeEvenement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TypeEvenement.jsonld-typesEvenements.in"];
            "text/html": components["schemas"]["TypeEvenement-typesEvenements.in"];
         };
      };
      responses: {
         /** @description TypeEvenement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TypeEvenement.jsonld-typesEvenements.out"];
               "text/html": components["schemas"]["TypeEvenement-typesEvenements.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Détail d'un types d'événements
    * @description Retourne le détail du type d'événements demandé
    */
   api_types_evenements_id_get: {
      parameters: {
         path: {
            /** @description TypeEvenement identifier */
            id: string;
         };
      };
      responses: {
         /** @description TypeEvenement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeEvenement.jsonld-typesEvenements.out"];
               "text/html": components["schemas"]["TypeEvenement-typesEvenements.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TypeEvenement resource.
    * @description Updates the TypeEvenement resource.
    */
   api_types_evenements_id_patch: {
      parameters: {
         path: {
            /** @description TypeEvenement identifier */
            id: string;
         };
      };
      /** @description The updated TypeEvenement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TypeEvenement-typesEvenements.in"];
         };
      };
      responses: {
         /** @description TypeEvenement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeEvenement.jsonld-typesEvenements.out"];
               "text/html": components["schemas"]["TypeEvenement-typesEvenements.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of TauxHoraire resources.
    * @description Retrieves the collection of TauxHoraire resources.
    */
   api_types_evenements_typeIdtaux_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            date?: string;
         };
         path: {
            /** @description TauxHoraire identifier */
            typeId: string;
         };
      };
      responses: {
         /** @description TauxHoraire collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TauxHoraire.jsonld-taux.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TauxHoraire-taux.out"][];
            };
         };
      };
   };
   /**
    * Creates a TauxHoraire resource.
    * @description Creates a TauxHoraire resource.
    */
   api_types_evenements_typeIdtaux_post: {
      parameters: {
         path: {
            /** @description TauxHoraire identifier */
            typeId: string;
         };
      };
      /** @description The new TauxHoraire resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TauxHoraire.jsonld-taux.in"];
            "text/html": components["schemas"]["TauxHoraire-taux.in"];
         };
      };
      responses: {
         /** @description TauxHoraire resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TauxHoraire.jsonld-taux.out"];
               "text/html": components["schemas"]["TauxHoraire-taux.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a TauxHoraire resource.
    * @description Retrieves a TauxHoraire resource.
    */
   api_types_evenements_typeIdtaux_id_get: {
      parameters: {
         path: {
            /** @description TauxHoraire identifier */
            typeId: string;
            /** @description TauxHoraire identifier */
            id: string;
         };
      };
      responses: {
         /** @description TauxHoraire resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TauxHoraire.jsonld-taux.out"];
               "text/html": components["schemas"]["TauxHoraire-taux.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the TauxHoraire resource.
    * @description Removes the TauxHoraire resource.
    */
   api_types_evenements_typeIdtaux_id_delete: {
      parameters: {
         path: {
            /** @description TauxHoraire identifier */
            typeId: string;
            /** @description TauxHoraire identifier */
            id: string;
         };
      };
      responses: {
         /** @description TauxHoraire resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TauxHoraire resource.
    * @description Updates the TauxHoraire resource.
    */
   api_types_evenements_typeIdtaux_id_patch: {
      parameters: {
         path: {
            /** @description TauxHoraire identifier */
            typeId: string;
            /** @description TauxHoraire identifier */
            id: string;
         };
      };
      /** @description The updated TauxHoraire resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TauxHoraire-taux.in"];
         };
      };
      responses: {
         /** @description TauxHoraire resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TauxHoraire.jsonld-taux.out"];
               "text/html": components["schemas"]["TauxHoraire-taux.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of TypeSuiviAmenagement resources.
    * @description Retrieves the collection of TypeSuiviAmenagement resources.
    */
   api_types_suivi_amenagements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description TypeSuiviAmenagement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TypeSuiviAmenagement.jsonld-type_suivi_amenagement.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TypeSuiviAmenagement-type_suivi_amenagement.out"][];
            };
         };
      };
   };
   /**
    * Creates a TypeSuiviAmenagement resource.
    * @description Creates a TypeSuiviAmenagement resource.
    */
   api_types_suivi_amenagements_post: {
      /** @description The new TypeSuiviAmenagement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TypeSuiviAmenagement.jsonld-type_suivi_amenagement.in"];
            "text/html": components["schemas"]["TypeSuiviAmenagement-type_suivi_amenagement.in"];
         };
      };
      responses: {
         /** @description TypeSuiviAmenagement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TypeSuiviAmenagement.jsonld-type_suivi_amenagement.out"];
               "text/html": components["schemas"]["TypeSuiviAmenagement-type_suivi_amenagement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a TypeSuiviAmenagement resource.
    * @description Retrieves a TypeSuiviAmenagement resource.
    */
   api_types_suivi_amenagements_id_get: {
      parameters: {
         path: {
            /** @description TypeSuiviAmenagement identifier */
            id: string;
         };
      };
      responses: {
         /** @description TypeSuiviAmenagement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeSuiviAmenagement.jsonld-type_suivi_amenagement.out"];
               "text/html": components["schemas"]["TypeSuiviAmenagement-type_suivi_amenagement.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TypeSuiviAmenagement resource.
    * @description Updates the TypeSuiviAmenagement resource.
    */
   api_types_suivi_amenagements_id_patch: {
      parameters: {
         path: {
            /** @description TypeSuiviAmenagement identifier */
            id: string;
         };
      };
      /** @description The updated TypeSuiviAmenagement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TypeSuiviAmenagement-type_suivi_amenagement.in"];
         };
      };
      responses: {
         /** @description TypeSuiviAmenagement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypeSuiviAmenagement.jsonld-type_suivi_amenagement.out"];
               "text/html": components["schemas"]["TypeSuiviAmenagement-type_suivi_amenagement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of TypologieHandicap resources.
    * @description Retrieves the collection of TypologieHandicap resources.
    */
   api_typologies_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[libelle]"?: "asc" | "desc";
         };
      };
      responses: {
         /** @description TypologieHandicap collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TypologieHandicap.jsonld-typologies.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TypologieHandicap-typologies.out"][];
            };
         };
      };
   };
   /**
    * Creates a TypologieHandicap resource.
    * @description Creates a TypologieHandicap resource.
    */
   api_typologies_post: {
      /** @description The new TypologieHandicap resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TypologieHandicap.jsonld-typologies.in"];
            "text/html": components["schemas"]["TypologieHandicap-typologies.in"];
         };
      };
      responses: {
         /** @description TypologieHandicap resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TypologieHandicap.jsonld-typologies.out"];
               "text/html": components["schemas"]["TypologieHandicap-typologies.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a TypologieHandicap resource.
    * @description Retrieves a TypologieHandicap resource.
    */
   api_typologies_id_get: {
      parameters: {
         path: {
            /** @description TypologieHandicap identifier */
            id: string;
         };
      };
      responses: {
         /** @description TypologieHandicap resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypologieHandicap.jsonld-typologies.out"];
               "text/html": components["schemas"]["TypologieHandicap-typologies.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the TypologieHandicap resource.
    * @description Updates the TypologieHandicap resource.
    */
   api_typologies_id_patch: {
      parameters: {
         path: {
            /** @description TypologieHandicap identifier */
            id: string;
         };
      };
      /** @description The updated TypologieHandicap resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["TypologieHandicap-typologies.in"];
         };
      };
      responses: {
         /** @description TypologieHandicap resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TypologieHandicap.jsonld-typologies.out"];
               "text/html": components["schemas"]["TypologieHandicap-typologies.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Utilisateur resources.
    * @description Retrieves the collection of Utilisateur resources.
    */
   utilisateurs: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            term?: string;
            beneficiaire?: string;
            "creneau[debut]"?: string;
            "creneau[fin]"?: string;
            recherche?: string;
            tags?: string;
            "tags[]"?: string[];
            nom?: string;
            prenom?: string;
            "intervenant.typesEvenements"?: string;
            "intervenant.typesEvenements[]"?: string[];
            "intervenant.campuses"?: string;
            "intervenant.campuses[]"?: string[];
            "intervenant.competences"?: string;
            "intervenant.competences[]"?: string[];
            profil?: string;
            libelleCampus?: string;
            libelleComposante?: string;
            nomGestionnaire?: string;
            intervenantArchive?: boolean;
            "order[nom]"?: "asc" | "desc";
            "beneficiaires.avecAccompagnement"?: boolean;
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            "exists[numeroEtudiant]"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            etatAvisEse?: string;
            etatDecisionAmenagement?: string;
         };
      };
      responses: {
         /** @description Utilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Utilisateur.jsonld-utilisateur.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Utilisateur-utilisateur.out"][];
            };
         };
      };
   };
   /**
    * Retrieves a Utilisateur resource.
    * @description Retrieves a Utilisateur resource.
    */
   api_utilisateurs_uid_get: {
      parameters: {
         path: {
            /** @description Utilisateur identifier */
            uid: string;
         };
      };
      responses: {
         /** @description Utilisateur resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Utilisateur.jsonld-utilisateur.out"];
               "text/html": components["schemas"]["Utilisateur-utilisateur.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Utilisateur resource.
    * @description Updates the Utilisateur resource.
    */
   api_utilisateurs_uid_patch: {
      parameters: {
         path: {
            /** @description Utilisateur identifier */
            uid: string;
         };
      };
      /** @description The updated Utilisateur resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Utilisateur-utilisateur.in"];
         };
      };
      responses: {
         /** @description Utilisateur resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Utilisateur.jsonld-utilisateur.out"];
               "text/html": components["schemas"]["Utilisateur-utilisateur.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Amenagement resources.
    * @description Retrieves the collection of Amenagement resources.
    */
   api_utilisateurs_uidamenagements_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            type?: string;
            "type[]"?: string[];
            "type.categorie"?: string;
            "type.categorie[]"?: string[];
            suivi?: string;
            "suivi[]"?: string[];
            nom?: string;
            "nom[]"?: string[];
            "type.pedagogique"?: boolean;
            "type.examens"?: boolean;
            "type.aideHumaine"?: boolean;
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            tags?: string;
            "tags[]"?: string[];
            "order[beneficiaires.utilisateur.nom]"?: "asc" | "desc";
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
         };
         path: {
            /** @description Amenagement identifier */
            uid: string;
         };
      };
      responses: {
         /** @description Amenagement collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Amenagement.jsonld-amenagement.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Amenagement-amenagement.out"][];
            };
         };
      };
   };
   /**
    * Creates a Amenagement resource.
    * @description Creates a Amenagement resource.
    */
   api_utilisateurs_uidamenagements_post: {
      parameters: {
         path: {
            /** @description Amenagement identifier */
            uid: string;
         };
      };
      /** @description The new Amenagement resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Amenagement.jsonld-amenagement.in"];
            "text/html": components["schemas"]["Amenagement-amenagement.in"];
         };
      };
      responses: {
         /** @description Amenagement resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Amenagement.jsonld-amenagement.out"];
               "text/html": components["schemas"]["Amenagement-amenagement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Amenagement resource.
    * @description Retrieves a Amenagement resource.
    */
   api_utilisateurs_uidamenagements_id_get: {
      parameters: {
         path: {
            /** @description Amenagement identifier */
            uid: string;
            /** @description Amenagement identifier */
            id: string;
         };
      };
      responses: {
         /** @description Amenagement resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Amenagement.jsonld-amenagement.out"];
               "text/html": components["schemas"]["Amenagement-amenagement.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the Amenagement resource.
    * @description Removes the Amenagement resource.
    */
   api_utilisateurs_uidamenagements_id_delete: {
      parameters: {
         path: {
            /** @description Amenagement identifier */
            uid: string;
            /** @description Amenagement identifier */
            id: string;
         };
      };
      responses: {
         /** @description Amenagement resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Amenagement resource.
    * @description Updates the Amenagement resource.
    */
   api_utilisateurs_uidamenagements_id_patch: {
      parameters: {
         path: {
            /** @description Amenagement identifier */
            uid: string;
            /** @description Amenagement identifier */
            id: string;
         };
      };
      /** @description The updated Amenagement resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Amenagement-amenagement.in"];
         };
      };
      responses: {
         /** @description Amenagement resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Amenagement.jsonld-amenagement.out"];
               "text/html": components["schemas"]["Amenagement-amenagement.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of AvisEse resources.
    * @description Retrieves the collection of AvisEse resources.
    */
   api_utilisateurs_uidavis_ese_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[debut]"?: "asc" | "desc";
         };
         path: {
            /** @description AvisEse identifier */
            uid: string;
         };
      };
      responses: {
         /** @description AvisEse collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["AvisEse.jsonld-avis_ese.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["AvisEse-avis_ese.out"][];
            };
         };
      };
   };
   /**
    * Creates a AvisEse resource.
    * @description Creates a AvisEse resource.
    */
   api_utilisateurs_uidavis_ese_post: {
      parameters: {
         path: {
            /** @description AvisEse identifier */
            uid: string;
         };
      };
      /** @description The new AvisEse resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["AvisEse.jsonld-avis_ese.in"];
            "text/html": components["schemas"]["AvisEse-avis_ese.in"];
         };
      };
      responses: {
         /** @description AvisEse resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["AvisEse.jsonld-avis_ese.out"];
               "text/html": components["schemas"]["AvisEse-avis_ese.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a AvisEse resource.
    * @description Retrieves a AvisEse resource.
    */
   api_utilisateurs_uidavis_ese_id_get: {
      parameters: {
         path: {
            /** @description AvisEse identifier */
            uid: string;
            /** @description AvisEse identifier */
            id: string;
         };
      };
      responses: {
         /** @description AvisEse resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["AvisEse.jsonld-avis_ese.out"];
               "text/html": components["schemas"]["AvisEse-avis_ese.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the AvisEse resource.
    * @description Removes the AvisEse resource.
    */
   api_utilisateurs_uidavis_ese_id_delete: {
      parameters: {
         path: {
            /** @description AvisEse identifier */
            uid: string;
            /** @description AvisEse identifier */
            id: string;
         };
      };
      responses: {
         /** @description AvisEse resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the AvisEse resource.
    * @description Updates the AvisEse resource.
    */
   api_utilisateurs_uidavis_ese_id_patch: {
      parameters: {
         path: {
            /** @description AvisEse identifier */
            uid: string;
            /** @description AvisEse identifier */
            id: string;
         };
      };
      /** @description The updated AvisEse resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["AvisEse-avis_ese.in"];
         };
      };
      responses: {
         /** @description AvisEse resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["AvisEse.jsonld-avis_ese.out"];
               "text/html": components["schemas"]["AvisEse-avis_ese.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of CharteUtilisateur resources.
    * @description Retrieves the collection of CharteUtilisateur resources.
    */
   api_utilisateurs_uidchartes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
         path: {
            /** @description CharteUtilisateur identifier */
            uid: string;
         };
      };
      responses: {
         /** @description CharteUtilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["CharteUtilisateur.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["CharteUtilisateur"][];
            };
         };
      };
   };
   /**
    * Retrieves a CharteUtilisateur resource.
    * @description Retrieves a CharteUtilisateur resource.
    */
   api_utilisateurs_uidchartes_id_get: {
      parameters: {
         path: {
            /** @description CharteUtilisateur identifier */
            uid: string;
            /** @description CharteUtilisateur identifier */
            id: string;
         };
      };
      responses: {
         /** @description CharteUtilisateur resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CharteUtilisateur.jsonld"];
               "text/html": components["schemas"]["CharteUtilisateur"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the CharteUtilisateur resource.
    * @description Updates the CharteUtilisateur resource.
    */
   api_utilisateurs_uidchartes_id_patch: {
      parameters: {
         path: {
            /** @description CharteUtilisateur identifier */
            uid: string;
            /** @description CharteUtilisateur identifier */
            id: string;
         };
      };
      /** @description The updated CharteUtilisateur resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["CharteUtilisateur-charte_utilisateur.in"];
         };
      };
      responses: {
         /** @description CharteUtilisateur resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["CharteUtilisateur.jsonld"];
               "text/html": components["schemas"]["CharteUtilisateur"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a DecisionAmenagementExamens resource.
    * @description Retrieves a DecisionAmenagementExamens resource.
    */
   api_utilisateurs_uiddecisions_annee_get: {
      parameters: {
         path: {
            /** @description DecisionAmenagementExamens identifier */
            uid: string;
            /** @description DecisionAmenagementExamens identifier */
            annee: string;
         };
      };
      responses: {
         /** @description DecisionAmenagementExamens resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["DecisionAmenagementExamens.jsonld-decision.out"];
               "application/pdf": components["schemas"]["DecisionAmenagementExamens-decision.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the DecisionAmenagementExamens resource.
    * @description Updates the DecisionAmenagementExamens resource.
    */
   api_utilisateurs_uiddecisions_annee_patch: {
      parameters: {
         path: {
            /** @description DecisionAmenagementExamens identifier */
            uid: string;
            /** @description DecisionAmenagementExamens identifier */
            annee: string;
         };
      };
      /** @description The updated DecisionAmenagementExamens resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["DecisionAmenagementExamens-decision.in"];
         };
      };
      responses: {
         /** @description DecisionAmenagementExamens resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["DecisionAmenagementExamens.jsonld-decision.out"];
               "text/html": components["schemas"]["DecisionAmenagementExamens-decision.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of Demande resources.
    * @description Retrieves the collection of Demande resources.
    */
   api_utilisateurs_uiddemandes_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "demandeur.nom"?: string;
            "demandeur.prenom"?: string;
            etat?: string;
            "etat[]"?: string[];
            "campagne.typeDemande"?: string;
            "campagne.typeDemande[]"?: string[];
            "campagne.typeDemande.libelle"?: string;
            campagne?: string;
            "campagne[]"?: string[];
            demandeur?: string;
            "demandeur[]"?: string[];
            gestionnaire?: string;
            "gestionnaire[]"?: string[];
            libelleComposante?: string;
            "libelleComposante[]"?: string[];
            libelleFormation?: string;
            "libelleFormation[]"?: string[];
            composante?: string;
            "composante[]"?: string[];
            formation?: string;
            "formation[]"?: string[];
            discipline?: string;
            "discipline[]"?: string[];
            "order[demandeur.nom]"?: "asc" | "desc";
            "order[dateDepot]"?: "asc" | "desc";
            format_simple?: boolean;
            archivees?: boolean;
         };
         path: {
            /** @description Demande identifier */
            uid: string;
         };
      };
      responses: {
         /** @description Demande collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Demande.jsonld-demande.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Demande-demande.out"][];
            };
         };
      };
   };
   /**
    * Retrieves the collection of Entretien resources.
    * @description Retrieves the collection of Entretien resources.
    */
   api_utilisateurs_uidentretiens_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
            "order[date]"?: "asc" | "desc";
         };
         path: {
            /** @description Entretien identifier */
            uid: string;
         };
      };
      responses: {
         /** @description Entretien collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["Entretien.jsonld-entretien.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["Entretien-entretien.out"][];
            };
         };
      };
   };
   /**
    * Creates a Entretien resource.
    * @description Creates a Entretien resource.
    */
   api_utilisateurs_uidentretiens_post: {
      parameters: {
         path: {
            /** @description Entretien identifier */
            uid: string;
         };
      };
      /** @description The new Entretien resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["Entretien.jsonld-entretien.in"];
            "text/html": components["schemas"]["Entretien-entretien.in"];
         };
      };
      responses: {
         /** @description Entretien resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["Entretien.jsonld-entretien.out"];
               "text/html": components["schemas"]["Entretien-entretien.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Entretien resource.
    * @description Retrieves a Entretien resource.
    */
   api_utilisateurs_uidentretiens_id_get: {
      parameters: {
         path: {
            /** @description Entretien identifier */
            uid: string;
            /** @description Entretien identifier */
            id: string;
         };
      };
      responses: {
         /** @description Entretien resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Entretien.jsonld-entretien.out"];
               "text/html": components["schemas"]["Entretien-entretien.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the Entretien resource.
    * @description Removes the Entretien resource.
    */
   api_utilisateurs_uidentretiens_id_delete: {
      parameters: {
         path: {
            /** @description Entretien identifier */
            uid: string;
            /** @description Entretien identifier */
            id: string;
         };
      };
      responses: {
         /** @description Entretien resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the Entretien resource.
    * @description Updates the Entretien resource.
    */
   api_utilisateurs_uidentretiens_id_patch: {
      parameters: {
         path: {
            /** @description Entretien identifier */
            uid: string;
            /** @description Entretien identifier */
            id: string;
         };
      };
      /** @description The updated Entretien resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["Entretien-entretien.in"];
         };
      };
      responses: {
         /** @description Entretien resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["Entretien.jsonld-entretien.out"];
               "text/html": components["schemas"]["Entretien-entretien.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of ParametreUI resources.
    * @description Retrieves the collection of ParametreUI resources.
    */
   api_utilisateurs_uidparametres_ui_get_collection: {
      parameters: {
         query?: {
            /** @description The collection page number */
            page?: number;
            /** @description The number of items per page */
            itemsPerPage?: number;
         };
         path: {
            /** @description ParametreUI identifier */
            uid: string;
         };
      };
      responses: {
         /** @description ParametreUI collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["ParametreUI.jsonld"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["ParametreUI"][];
            };
         };
      };
   };
   /**
    * Retrieves a ParametreUI resource.
    * @description Retrieves a ParametreUI resource.
    */
   api_utilisateurs_uidparametres_ui_cle_get: {
      parameters: {
         path: {
            /** @description ParametreUI identifier */
            uid: string;
            /** @description ParametreUI identifier */
            cle: string;
         };
      };
      responses: {
         /** @description ParametreUI resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ParametreUI.jsonld"];
               "text/html": components["schemas"]["ParametreUI"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Replaces the ParametreUI resource.
    * @description Replaces the ParametreUI resource.
    */
   api_utilisateurs_uidparametres_ui_cle_put: {
      parameters: {
         path: {
            /** @description ParametreUI identifier */
            uid: string;
            /** @description ParametreUI identifier */
            cle: string;
         };
      };
      /** @description The updated ParametreUI resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["ParametreUI.jsonld"];
            "text/html": components["schemas"]["ParametreUI"];
         };
      };
      responses: {
         /** @description ParametreUI resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["ParametreUI.jsonld"];
               "text/html": components["schemas"]["ParametreUI"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Removes the ParametreUI resource.
    * @description Removes the ParametreUI resource.
    */
   api_utilisateurs_uidparametres_ui_cle_delete: {
      parameters: {
         path: {
            /** @description ParametreUI identifier */
            uid: string;
            /** @description ParametreUI identifier */
            cle: string;
         };
      };
      responses: {
         /** @description ParametreUI resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a Photo resource.
    * @description Retrieves a Photo resource.
    */
   api_utilisateurs_uidphoto_get: {
      parameters: {
         path: {
            /** @description Photo identifier */
            uid: string;
         };
      };
      responses: {
         /** @description Photo resource */
         200: {
            content: {
               "image/jpeg": components["schemas"]["Photo"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Creates a BeneficiaireProfil resource.
    * @description Creates a BeneficiaireProfil resource.
    */
   api_utilisateurs_uidprofils_post: {
      parameters: {
         path: {
            /** @description BeneficiaireProfil identifier */
            uid: string;
         };
      };
      /** @description The new BeneficiaireProfil resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["BeneficiaireProfil.jsonld-beneficiaires_profils.in"];
            "text/html": components["schemas"]["BeneficiaireProfil-beneficiaires_profils.in"];
         };
      };
      responses: {
         /** @description BeneficiaireProfil resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["BeneficiaireProfil.jsonld-beneficiaires_profils.out"];
               "text/html": components["schemas"]["BeneficiaireProfil-beneficiaires_profils.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a BeneficiaireProfil resource.
    * @description Retrieves a BeneficiaireProfil resource.
    */
   api_utilisateurs_uidprofils_id_get: {
      parameters: {
         path: {
            /** @description BeneficiaireProfil identifier */
            uid: string;
            /** @description BeneficiaireProfil identifier */
            id: string;
         };
      };
      responses: {
         /** @description BeneficiaireProfil resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["BeneficiaireProfil.jsonld-beneficiaires_profils.out"];
               "text/html": components["schemas"]["BeneficiaireProfil-beneficiaires_profils.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the BeneficiaireProfil resource.
    * @description Removes the BeneficiaireProfil resource.
    */
   api_utilisateurs_uidprofils_id_delete: {
      parameters: {
         path: {
            /** @description BeneficiaireProfil identifier */
            uid: string;
            /** @description BeneficiaireProfil identifier */
            id: string;
         };
      };
      responses: {
         /** @description BeneficiaireProfil resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Updates the BeneficiaireProfil resource.
    * @description Updates the BeneficiaireProfil resource.
    */
   api_utilisateurs_uidprofils_id_patch: {
      parameters: {
         path: {
            /** @description BeneficiaireProfil identifier */
            uid: string;
            /** @description BeneficiaireProfil identifier */
            id: string;
         };
      };
      /** @description The updated BeneficiaireProfil resource */
      requestBody: {
         content: {
            "application/merge-patch+json": components["schemas"]["BeneficiaireProfil-beneficiaires_profils.in"];
         };
      };
      responses: {
         /** @description BeneficiaireProfil resource updated */
         200: {
            content: {
               "application/ld+json": components["schemas"]["BeneficiaireProfil.jsonld-beneficiaires_profils.out"];
               "text/html": components["schemas"]["BeneficiaireProfil-beneficiaires_profils.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves the collection of TagUtilisateur resources.
    * @description Retrieves the collection of TagUtilisateur resources.
    */
   api_utilisateurs_uidtags_get_collection: {
      parameters: {
         path: {
            /** @description TagUtilisateur identifier */
            uid: string;
         };
      };
      responses: {
         /** @description TagUtilisateur collection */
         200: {
            content: {
               "application/ld+json": {
                  "hydra:member": components["schemas"]["TagUtilisateur.jsonld-tag_utilisateur.out"][];
                  "hydra:totalItems"?: number;
                  /**
                   * @example {
                   *   "@id": "string",
                   *   "type": "string",
                   *   "hydra:first": "string",
                   *   "hydra:last": "string",
                   *   "hydra:previous": "string",
                   *   "hydra:next": "string"
                   * }
                   */
                  "hydra:view"?: {
                     /** Format: iri-reference */
                     "@id"?: string;
                     "@type"?: string;
                     /** Format: iri-reference */
                     "hydra:first"?: string;
                     /** Format: iri-reference */
                     "hydra:last"?: string;
                     /** Format: iri-reference */
                     "hydra:previous"?: string;
                     /** Format: iri-reference */
                     "hydra:next"?: string;
                  };
                  "hydra:search"?: {
                     "@type"?: string;
                     "hydra:template"?: string;
                     "hydra:variableRepresentation"?: string;
                     "hydra:mapping"?: {
                        "@type"?: string;
                        variable?: string;
                        property?: string | null;
                        required?: boolean;
                     }[];
                  };
               };
               "text/html": components["schemas"]["TagUtilisateur-tag_utilisateur.out"][];
            };
         };
      };
   };
   /**
    * Creates a TagUtilisateur resource.
    * @description Creates a TagUtilisateur resource.
    */
   api_utilisateurs_uidtags_post: {
      parameters: {
         path: {
            /** @description TagUtilisateur identifier */
            uid: string;
         };
      };
      /** @description The new TagUtilisateur resource */
      requestBody: {
         content: {
            "application/ld+json": components["schemas"]["TagUtilisateur.jsonld-tag_utilisateur.in"];
            "text/html": components["schemas"]["TagUtilisateur-tag_utilisateur.in"];
         };
      };
      responses: {
         /** @description TagUtilisateur resource created */
         201: {
            content: {
               "application/ld+json": components["schemas"]["TagUtilisateur.jsonld-tag_utilisateur.out"];
               "text/html": components["schemas"]["TagUtilisateur-tag_utilisateur.out"];
            };
         };
         /** @description Invalid input */
         400: {
            content: never;
         };
         /** @description Unprocessable entity */
         422: {
            content: never;
         };
      };
   };
   /**
    * Retrieves a TagUtilisateur resource.
    * @description Retrieves a TagUtilisateur resource.
    */
   api_utilisateurs_uidtags_id_get: {
      parameters: {
         path: {
            /** @description TagUtilisateur identifier */
            uid: string;
            /** @description TagUtilisateur identifier */
            id: string;
         };
      };
      responses: {
         /** @description TagUtilisateur resource */
         200: {
            content: {
               "application/ld+json": components["schemas"]["TagUtilisateur.jsonld-tag_utilisateur.out"];
               "text/html": components["schemas"]["TagUtilisateur-tag_utilisateur.out"];
            };
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
   /**
    * Removes the TagUtilisateur resource.
    * @description Removes the TagUtilisateur resource.
    */
   api_utilisateurs_uidtags_id_delete: {
      parameters: {
         path: {
            /** @description TagUtilisateur identifier */
            uid: string;
            /** @description TagUtilisateur identifier */
            id: string;
         };
      };
      responses: {
         /** @description TagUtilisateur resource deleted */
         204: {
            content: never;
         };
         /** @description Resource not found */
         404: {
            content: never;
         };
      };
   };
}
