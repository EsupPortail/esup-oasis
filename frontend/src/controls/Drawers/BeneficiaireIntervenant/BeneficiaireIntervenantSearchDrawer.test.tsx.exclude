import React from "react";
import { act, fireEvent, render, screen } from "@testing-library/react";
import mockApi from "../../../tests/mockAPI";
import { TestApiWrapper } from "../../../AppWrapper";
import BeneficiaireIntervenantSearchDrawer from "./BeneficiaireIntervenantSearchDrawer";

beforeEach(() => {
   mockApi();
});

jest.mock("react-redux", () => ({
   useSelector: () => ({
      affichage: {
         type: "work_week",
         densite: "Normal",
         fitToScreen: false,
         layout: "calendar",
      },
      filtres: {
         debut: new Date("2023-04-17T12:16:35.018Z"),
         fin: new Date("2023-04-21T12:16:35.018Z"),
         affecte: undefined,
      },
   }),
   useDispatch: () => jest.fn(() => null),
}));

async function loadComponent() {
   // eslint-disable-next-line testing-library/no-unnecessary-act
   act(() => {
      render(
         <TestApiWrapper>
            <BeneficiaireIntervenantSearchDrawer onSelect={() => {}}  />
         </TestApiWrapper>,
      );
   });

   const filter = await screen.findByRole("combobox");
   expect(filter).toBeInTheDocument();
   fireEvent.focus(filter);

   return filter;
}

test("Beneficiaire-Intervenant : recherche", async () => {
   await loadComponent().then(async (filter) => {
      fireEvent.change(filter, { target: { value: "Alice" } });
      fireEvent.keyDown(filter, { key: "Enter" });

      const loading = await screen.findByText("loading");
      expect(loading).toBeInTheDocument();

      //A faire : tester le filtrage
      const alice = await screen.findByTestId("NomBeneficiaire 1");
      expect(alice).toBeInTheDocument();
   });
});
